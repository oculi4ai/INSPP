commit 7d73bb0ea7631ce1191de1cd6fbbcb07fe215f31
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Mon Jul 17 16:58:42 2006 -0400

    * Released 0.70
    * Added NEWS to the dist

:100644 100644 a15d9a8... 54fa0b2... M	MANIFEST.in
:000000 100644 0000000... 711e36c... A	NEWS

commit 8728a13fa422955aa96bf2d8644af773407dbe65
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Mon Jul 17 16:43:42 2006 -0400

    * remove ChangeLog as it will be generated by git-whatchanged

:100644 000000 e69de29... 0000000... D	ChangeLog

commit caaabe86ac7a91c84d022c5806e67a42617fa566
Author: John (J5) Palmieri <quinticent@phuket.(none)>
Date:   Fri Jul 14 12:52:53 2006 -0400

    * Add Osvaldo S. Neto to AUTHORS for his distutils patch

:100644 100644 329b8d0... fe6899e... M	AUTHORS

commit 4b1d99c3fbf0d402cb7badbcb8e6ea682f7e54c6
Author: John (J5) Palmieri <quinticent@phuket.(none)>
Date:   Wed Jul 12 21:40:13 2006 -0400

    * MANIFEST.in:
      added the tools directory

:100644 100644 41ab0b4... a15d9a8... M	MANIFEST.in

commit 9c70ef78b9368b5fd090dd3aafb3f189cc88616d
Author: John (J5) Palmieri <quinticent@phuket.(none)>
Date:   Wed Jul 12 21:32:57 2006 -0400

    * run-test.sh:
      create the .service file before we launch dbus

:100755 100755 6aa01cb... 41cc0a7... M	test/run-test.sh

commit 7a0389c01ac8c775b7b677bcc20cc0da716b1c19
Author: John (J5) Palmieri <quinticent@phuket.(none)>
Date:   Wed Jul 12 21:28:39 2006 -0400

    * Add tests back
    * create a check command for distutils (python setup.py check)

:100644 100644 c94ad7d... 41ab0b4... M	MANIFEST.in
:100644 100644 5b18002... 65b2845... M	setup.py
:000000 100644 0000000... fb6f010... A	test/dbus_python_check.py
:000000 100755 0000000... 6aa01cb... A	test/run-test.sh
:000000 100755 0000000... a68e4c8... A	test/test-client.py
:000000 100755 0000000... 975ea79... A	test/test-service.py
:000000 100755 0000000... 0ebf228... A	tools/run-with-tmp-session-bus.sh
:000000 100644 0000000... 73a38f1... A	tools/session.conf

commit 303a9d690767dd40e75940f9e3c4e1d1fa504554
Author: John (J5) Palmieri <quinticent@phuket.(none)>
Date:   Wed Jul 12 18:11:07 2006 -0400

    * MANIFEST.in: Added
    * setup.py: change package name to dbus-python

:000000 100644 0000000... c94ad7d... A	MANIFEST.in
:100644 100644 0cc0ac2... 5b18002... M	setup.py

commit c72e8df76cda925d0bac0e99af94a4d3760e74b1
Author: John (J5) Palmieri <quinticent@phuket.(none)>
Date:   Wed Jul 12 17:34:58 2006 -0400

    * dbus/dbus_glib_bindings.pyx: Prepend includes dbus-glib.h and
      dbus-glib-lowlevel withd dbus/ since we are no longer building in tree and
      need to get the system's header files

:100644 100644 3e2e33b... fa86e91... M	dbus/dbus_glib_bindings.pyx

commit 98bdb18235a405339041596c571f213ea5fa3c24
Author: John (J5) Palmieri <quinticent@phuket.(none)>
Date:   Wed Jul 12 17:29:04 2006 -0400

    - s/dbus/-Idbus\// in includedirs_flag

:100644 100644 cb642df... 0cc0ac2... M	setup.py

commit 82a4e8afb8ca163416f602fdb1df96b11765ecb2
Author: Robert McQueen <robot101@thubuntu.(none)>
Date:   Wed Jul 12 21:53:57 2006 +0100

    setup.py, dbus/extract.py: Patch from Osvaldo Santana Neto
    <osvaldo.santana@indt.org.br> to make the python bindings build and install
    with distutils. Not quite working yet because of path madness with the
    extract.py stuff.

:100644 100644 3cdb975... 28ae202... M	dbus/extract.py
:000000 100644 0000000... cb642df... A	setup.py

commit 172f80244f21a681609e6918c1f043b3272949f3
Author: Robert McQueen <robot101@thubuntu.(none)>
Date:   Wed Jul 12 19:40:37 2006 +0100

    dbus/__init__.py: Set version to 0.70.

:100644 100644 7d93783... 4b4c541... M	dbus/__init__.py

commit fb63da94f9e207e807f7f0ae18425d3b73173d43
Author: Robert McQueen <robot101@thubuntu.(none)>
Date:   Wed Jul 12 19:28:30 2006 +0100

    dbus/Makefile.am, dbus/examples/Makefile.am: removed

:100644 000000 ea261cb... 0000000... D	dbus/Makefile.am
:100644 000000 f7a1b22... 0000000... D	dbus/examples/Makefile.am

commit cc9eb8989a5782f62f8ca786d76e1267e48ec8bf
Author: Robert McQueen <robot101@thubuntu.(none)>
Date:   Wed Jul 12 19:26:39 2006 +0100

    Move python/ to dbus/, the name of the module.

:000000 100644 0000000... cce7eea... A	dbus/.cvsignore
:000000 100644 0000000... ea261cb... A	dbus/Makefile.am
:000000 100644 0000000... 7d93783... A	dbus/__init__.py
:000000 100644 0000000... 7e17d9f... A	dbus/_dbus.py
:000000 100644 0000000... c254178... A	dbus/_util.py
:000000 100644 0000000... e2182f1... A	dbus/dbus.pth
:000000 100644 0000000... f170720... A	dbus/dbus_bindings.pxd.in
:000000 100644 0000000... c29dea2... A	dbus/dbus_bindings.pyx
:000000 100644 0000000... 3e2e33b... A	dbus/dbus_glib_bindings.pyx
:000000 100644 0000000... 2e218c8... A	dbus/dbus_h_wrapper.h
:000000 100644 0000000... c9bc17f... A	dbus/decorators.py
:000000 100644 0000000... 282522d... A	dbus/examples/.cvsignore
:000000 100644 0000000... f7a1b22... A	dbus/examples/Makefile.am
:000000 100644 0000000... 3d170bd... A	dbus/examples/example-client.py
:000000 100644 0000000... cb25d20... A	dbus/examples/example-service.py
:000000 100644 0000000... 02eff89... A	dbus/examples/example-signal-emitter.py
:000000 100644 0000000... a06d494... A	dbus/examples/example-signal-recipient.py
:000000 100644 0000000... f763e3f... A	dbus/examples/gconf-proxy-client.py
:000000 100644 0000000... a899cf2... A	dbus/examples/gconf-proxy-service.py
:000000 100644 0000000... 5731ab2... A	dbus/examples/gconf-proxy-service2.py
:000000 100644 0000000... 4cad871... A	dbus/examples/list-system-services.py
:000000 100644 0000000... 2b01b96... A	dbus/exceptions.py
:000000 100644 0000000... 3cdb975... A	dbus/extract.py
:000000 100644 0000000... e1c3d9c... A	dbus/glib.py
:000000 100644 0000000... 47c9806... A	dbus/introspect_parser.py
:000000 100644 0000000... 023a5b7... A	dbus/matchrules.py
:000000 100644 0000000... 80e9ac2... A	dbus/proxies.py
:000000 100644 0000000... 9148a35... A	dbus/service.py
:000000 100644 0000000... f3d348c... A	dbus/types.py
:100644 000000 cce7eea... 0000000... D	python/.cvsignore
:100644 000000 ea261cb... 0000000... D	python/Makefile.am
:100644 000000 7d93783... 0000000... D	python/__init__.py
:100644 000000 7e17d9f... 0000000... D	python/_dbus.py
:100644 000000 c254178... 0000000... D	python/_util.py
:100644 000000 e2182f1... 0000000... D	python/dbus.pth
:100644 000000 f170720... 0000000... D	python/dbus_bindings.pxd.in
:100644 000000 c29dea2... 0000000... D	python/dbus_bindings.pyx
:100644 000000 3e2e33b... 0000000... D	python/dbus_glib_bindings.pyx
:100644 000000 2e218c8... 0000000... D	python/dbus_h_wrapper.h
:100644 000000 c9bc17f... 0000000... D	python/decorators.py
:100644 000000 282522d... 0000000... D	python/examples/.cvsignore
:100644 000000 f7a1b22... 0000000... D	python/examples/Makefile.am
:100644 000000 3d170bd... 0000000... D	python/examples/example-client.py
:100644 000000 cb25d20... 0000000... D	python/examples/example-service.py
:100644 000000 02eff89... 0000000... D	python/examples/example-signal-emitter.py
:100644 000000 a06d494... 0000000... D	python/examples/example-signal-recipient.py
:100644 000000 f763e3f... 0000000... D	python/examples/gconf-proxy-client.py
:100644 000000 a899cf2... 0000000... D	python/examples/gconf-proxy-service.py
:100644 000000 5731ab2... 0000000... D	python/examples/gconf-proxy-service2.py
:100644 000000 4cad871... 0000000... D	python/examples/list-system-services.py
:100644 000000 2b01b96... 0000000... D	python/exceptions.py
:100644 000000 3cdb975... 0000000... D	python/extract.py
:100644 000000 e1c3d9c... 0000000... D	python/glib.py
:100644 000000 47c9806... 0000000... D	python/introspect_parser.py
:100644 000000 023a5b7... 0000000... D	python/matchrules.py
:100644 000000 80e9ac2... 0000000... D	python/proxies.py
:100644 000000 9148a35... 0000000... D	python/service.py
:100644 000000 f3d348c... 0000000... D	python/types.py

commit 260a7da603a0449a117690a9cc46c7d171ec1112
Author: Robert McQueen <robot101@thubuntu.(none)>
Date:   Wed Jul 12 19:25:47 2006 +0100

    COPYING: Have the file with its contents and not a file full of NULLs (thanks XFS)

:100644 100644 3c54a9b... 90085d3... M	COPYING

commit 85ef4b2f21a67fa6f8ebb7977fc62a69208d86fe
Author: Robert McQueen <robot101@thubuntu.(none)>
Date:   Wed Jul 12 19:24:09 2006 +0100

    AUTHORS, COPYING: Copy from old tree.

:000000 100644 0000000... 329b8d0... A	AUTHORS
:000000 100644 0000000... 3c54a9b... A	COPYING

commit 7d136b1b7749b9d52703f00f546524a8967aeebc
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Mar 2 23:28:18 2006 +0000

    2006-03-02 John (J5) Palmieri <johnp@redhat.com>
    
            * python/dbus_bindings.pyx: Remove refrence to sys/cdefs.h
    	(Patch from Artem Kachitchkine <Artem.Kachitchkin at Sun.COM>)

:100644 100644 836dbf8... c29dea2... M	python/dbus_bindings.pyx

commit 6387ac0ee38cbc2c613f1ec6b481693451e6a1d6
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Feb 24 18:18:41 2006 +0000

    2006-02-24 John (J5) Palmieri <johnp@redhat.com>
    
    	* Released 0.61
    
    2006-02-24  John (J5) Palmieri  <johnp@redhat.com>
    
    	* proxies.py: Fix the callchain

:100644 100644 d13b72b... 80e9ac2... M	python/proxies.py

commit 7ce7ad66afac2b35ddab72190d31c8470a2e4d2d
Author: Robert McQueen <robot101@debian.org>
Date:   Wed Feb 15 23:45:48 2006 +0000

    2006-02-16 Robert McQueen <robot101@debian.org>
    
    	* glib/dbus-gmain.c: Make the previous commit compile.
    
    	* python/_dbus.py, python/matchrules.py: Patch from Ole Andre
    	Ravnaas <ole.andre.ravnaas@collabora.co.uk> to allow you to
    	specify sender_keyword="foo", path_keyword="bar" when adding
    	a signal listener, so that you can bind to signals generically
    	but still do something useful in your callback.
    
    	* python/dbus_bindings.pyx: Demarshal the byte type as unsigned
    	chars so that they're not cast to chars and made negative. Thanks
    	to Jakub Stachowski for reporting this and testing the fix.

:100644 100644 2376f17... 7e17d9f... M	python/_dbus.py
:100644 100644 3bde96a... 836dbf8... M	python/dbus_bindings.pyx
:100644 100644 3a2fbed... 023a5b7... M	python/matchrules.py

commit 62f127585556aeb828c0114225859bddc8d08aa3
Author: Robert McQueen <robot101@debian.org>
Date:   Tue Dec 6 12:38:07 2005 +0000

    2005-12-06 Robert McQueen <robot101@debian.org>
    
    	* python/service.py: s/sucessful/successful/ so we're allocating to
    	and reading from the same variable. Oops.

:100644 100644 ad36e4f... 9148a35... M	python/service.py

commit e48f4d56533ef815d05e05b31128e53640bd7ded
Author: Robert McQueen <robot101@debian.org>
Date:   Sun Nov 27 17:44:19 2005 +0000

    2005-11-27 Robert McQueen <robot101@debian.org>
    
    	* python/dbus_bindings.pyx: Repair my previous commit which reverted
    	part of the preceding one. Oops. Merge patch by Johan Hedberg
    	<johan.hedberg@nokia.com> to fix marshalling of 16-bit integer values
    	on big-endian platforms.
    
    	* test/python/test-client.py: Add some 16-bit integers to the test
    	values.

:100644 100644 8b1b221... 3bde96a... M	python/dbus_bindings.pyx

commit b5df8fdfae7b488156cef4ccc536523bfb892895
Author: Robert McQueen <robot101@debian.org>
Date:   Sun Nov 27 16:55:09 2005 +0000

    2005-11-27 Carlos Garcia Campos <carlosgc@gnome.org>
    
    	* glib/dbus-gobject.c: Append a GValue instead of a basic type in
    	method return message for property getters

:100644 100644 21adc87... 8b1b221... M	python/dbus_bindings.pyx

commit e9046cf6eabcc6e9f86e6dc8cb73a0b28ccc3347
Author: Robert McQueen <robot101@debian.org>
Date:   Sun Nov 27 16:40:57 2005 +0000

    2005-11-27 Robert McQueen <robot101@debian.org>
    
    	* python/dbus_bindings.pyx: Fix a bug where doing a strict append
    	with type v of an instance of dbus.Variant(foo, type='x') caused
    	it to be boxed twice before sending over the bus.
    
    	* python/dbus_bindings.pyx, python/service.py,
    	test/python/test-client.py: Update the constants for the new
    	request_name flags, and update comments/test cases now that queueing
    	is the default action.

:100644 100644 8b1b221... 21adc87... M	python/dbus_bindings.pyx
:100644 100644 e5a7002... ad36e4f... M	python/service.py

commit c38a568a59493a798164c2449f7774586fd236f3
Author: Robert McQueen <robot101@debian.org>
Date:   Tue Nov 15 17:19:19 2005 +0000

    2005-11-15 Robert McQueen <robot101@debian.org>
    
    	* bus/driver.c, bus/services.c, bus/services.h: Add a ReleaseName
    	method to org.freedesktop.DBus to release a bus name or give up
    	waiting in the queue for it.
    
    	* dbus/dbus-bus.c, dbus/dbus-bus.h, dbus/dbus-shared.h: Add a
    	dbus_bus_release_name method to send the ReleaseName method calls.
    	Add constants for the return values to dbus/dbus-shared.h.
    
    	* doc/dbus-specification.xml: Document the new ReleaseName method
    	in the specification.
    
    	* python/dbus_bindings.pyx: Add a low-level python binding for the
    	release name method.
    
    	* python/exceptions.py, python/service.py: Make freeing BusName
    	objects release the name. Add a NameExistsException, and fix a
    	bug with creating UnknownMethodException.
    
    	* test/python/test-client.py: Add tests for freeing BusName
    	objects causing names to be released.

:100644 100644 75e448e... 8b1b221... M	python/dbus_bindings.pyx
:100644 100644 5cb8d5a... 2b01b96... M	python/exceptions.py
:100644 100644 6c3561a... e5a7002... M	python/service.py

commit e6351798aca627adba6e3dad43a605482b63a43e
Author: Robert McQueen <robot101@debian.org>
Date:   Mon Nov 14 20:59:32 2005 +0000

    2005-11-15 Robert McQueen <robot101@debian.org>
    
    	* python/service.py: Include the traceback in the error reply when we
    	send an exception over the bus. _BEST_ _PATCH_ _EVER_

:100644 100644 409fc78... 6c3561a... M	python/service.py

commit 321ace3a0cf031e638bba1d753818ac068672dee
Author: Robert McQueen <robot101@debian.org>
Date:   Mon Nov 14 02:53:29 2005 +0000

    2005-11-14 Robert McQueen <robot101@debian.org>
    
    	* python/decorators.py, python/service.py: Add a new argument to the
    	dbus.service.method decorator called sender_keyword, which if set,
    	specifies the name of an argument which will be provided the bus
    	name of the method caller.
    
    	* test/python/test-client.py, test/python/test-service.py: Add a
    	method and test to check the sender_keyword functionality.

:100644 100644 e4cc024... c9bc17f... M	python/decorators.py
:100644 100644 3eec65f... 409fc78... M	python/service.py

commit cb37041d6ffeab9e7623dd7c51acc64cbaa7534d
Author: Robert McQueen <robot101@debian.org>
Date:   Mon Nov 7 15:31:30 2005 +0000

    2005-11-07 Robert McQueen <robot101@debian.org>
    
    	* python/decorators.py: Change emit_signal function to use the
    	signature annotation of the signal when marhsalling the arguments from
    	the service. Fix a bug where the code checking signature length
    	against argument length referenced the wrong variable.
    
    	* python/introspect_parser.py: Avoid adding the type signature of
    	signal arguments to any methods which occur after them in the
    	introspection data (!) by making the parser a little more careful
    	about its current state.
    
    	* python/service.py: Remove debug prints from last commit (again :D).
    
    	* test/python/test-client.py, test/python/test-service.py: Add test
    	signals with signature decorators to test the strict marshalling code
    	gives errors at the right time. Could do with checking the signals
    	actually get emitted too, given that the test does nothing with
    	signals at the moment...

:100644 100644 3973f3e... e4cc024... M	python/decorators.py
:100644 100644 40cae1e... 47c9806... M	python/introspect_parser.py
:100644 100644 d1973b0... 3eec65f... M	python/service.py

commit 792849028648dfc9fd0513c855b0ea9001a9ea04
Author: Robert McQueen <robot101@debian.org>
Date:   Mon Nov 7 12:14:52 2005 +0000

    2005-11-07 Robert McQueen <robot101@debian.org>
    
    	* python/_dbus.py: Add WeakReferenceDictionary cache of dbus.Bus
    	instances to stop madness of creating new instances representing
    	the same bus connection all the time, rendering any tracking of
    	match rules and bus names quite meaningless. Caught a bug where
    	the private argument to SessionBus() and friends was being passed
    	in as use_default_mainloop by mistake. Still some problems with
    	multiple dbus_binding.Connection instances representing the same
    	low-level connection (eg when you use both SessionBus() and
    	StarterBus() in same process), but it's a lot better now than it
    	was.
    
    	* python/dbus_bindings.pyx: Add constants with the return values
    	for bus_request_name().
    
    	* python/service.py: Store bus name instances in a per-dbus.Bus cache
    	and retrieve the same instances for the same name, so deletion can be
    	done with refcounting. Also now throws some kind of error if you
    	don't actually get the name you requested, unlike previously...
    
    	* test/python/test-client.py: Add tests for instance caching of buses
    	and bus name objects.

:100644 100644 bb4c042... 2376f17... M	python/_dbus.py
:100644 100644 a96a5ad... 75e448e... M	python/dbus_bindings.pyx
:100644 100644 14a2d6d... d1973b0... M	python/service.py

commit c6d4440b37c43681a4ecf11edfa5a4b0371734ea
Author: Robert McQueen <robot101@debian.org>
Date:   Fri Nov 4 12:17:54 2005 +0000

    2005-11-04 Robert McQueen <robot101@debian.org>
    
            * python/dbus_bindings.pyx, test/python/test-client.py: Fix
            marshalling of boolean values. Add some booleans to the values in
            the test client.
    
            * python/decorators.py, python/service.py: Add an 'async_callbacks'
            argument to the dbus.service.method decorator, which allows you to
            name arguments to take two callback functions for replying with
            return values or an exception.
    
            * test/python/test-client.py, test/python/test-service.py: Add test
            case using asynchronous method reply functions, both return values and
            errors, and from within both the function itself and from a mainloop
            callback.
    
            * python/decorators.py, python/service.py: Perform checking that the
            number of method/signal arguments matches the number of types in the
            signature at class loading time, not when you first introspect the
            class.
    
            * python/service.py: Remove debug print left by the last commit.

:100644 100644 c693a3d... a96a5ad... M	python/dbus_bindings.pyx
:100644 100644 8b55373... 3973f3e... M	python/decorators.py
:100644 100644 34b0384... 14a2d6d... M	python/service.py

commit fcbc5d45112bd16c9ff8f6ead36d89a6c6381dc8
Author: Robert McQueen <robot101@debian.org>
Date:   Thu Nov 3 21:47:31 2005 +0000

    2005-11-03 Robert McQueen <robot101@debian.org>
    
            * python/service.py: Heavy refactoring of method invocation, with
            hopefully no effect on functionality. Nuked _dispatch_dbus_method_call
            in favour of a new _message_cb that uses seperate functions for
            looking up the method to call, marshalling the return values, and
            sending exceptions as errors, and is easier to follow as a
            consequence.  Fixes some corner cases about returning things that
            don't match your declared out_signature, allows exceptions to define
            _dbus_error_name and have it be sent over the bus as the error name,
            and paves the way for cool stuff like heeding the message no reply
            flag, asynchronous method implementations, informing the method of the
            sender, and including backtraces in the error messages.
    
            * test/python/test-client.py: Catch and print exceptions thrown in the
            async callback tests, rather than passing them to the low-level
            bindings to be ignored in a noisy and frustrating manner.

:100644 100644 de68b61... 34b0384... M	python/service.py

commit b4a92c736cb37f2daba25283e830615dcf7137e8
Author: Robert McQueen <robot101@debian.org>
Date:   Thu Nov 3 16:13:52 2005 +0000

    2005-11-03 Robert McQueen <robot101@debian.org>
    
            * python/_dbus.py, python/proxies.py, python/service.py: Add __repr__
            functions to dbus.Bus, dbus.service.BusName and dbus.service.Object,
            tweak others to be consistent.
    
            * test/python/test-client.py: Tweak output of testInheritance.

:100644 100644 2e7e671... bb4c042... M	python/_dbus.py
:100644 100644 f1f3394... d13b72b... M	python/proxies.py
:100644 100644 3809ca5... de68b61... M	python/service.py

commit cd40a2db923dc01ee80f4827dfd3e102a98a64ec
Author: Robert McQueen <robot101@debian.org>
Date:   Sat Oct 29 22:41:07 2005 +0000

    2005-10-29 Robert McQueen <robot101@debian.org>
    
            * python/service.py: Major changes to allow multiple inheritance
            from classes that define D-Bus interfaces:
    
             1. Create a new Interface class which is the parent class of
                Object, and make the ObjectType metaclass into InterfaceType.
    
             2. Patch written with Rob Taylor to replace use of method_vtable
                with code that walks the class's __MRO__ (method resolution order)
                to behave like Python does when invoking methods and allow
                overriding as you'd expect. Code is quite tricky because
                we have to find two methods, the one to invoke which has the
                right name and isn't decorated with the /wrong/ interface,
                and the one to pick up the signatures from which is decorated
                with the right interface.
    
                The same caveats apply as to normal multiple inheritance -
                this has undefined behaviour if you try and inherit from two
                classes that define a method with the same name but are
                decorated with different interfaces. You should decorate
                your overriding method with the interface you want.
    
             3. Replace grungy introspection XML generation code in the metaclass
                with dictionaries that cope correctly with multiple inheritance
                and the overriding of methods. This also uses the signature
                decorations to provide correct introspection data, including
                the debut appearance of the types of your return values. :D
    
            * test/python/test-client.py, test/python/test-service.py: Add a test
            case to try invoking an method that overrides one inherited from a
            D-Bus interface class.

:100644 100644 ce251ed... 3809ca5... M	python/service.py

commit f14661ee73a5efc92dfcbe22e4230dab153a4d69
Author: Robert McQueen <robot101@debian.org>
Date:   Sat Oct 29 22:04:01 2005 +0000

    2005-10-29 Robert McQueen <robot101@debian.org>
    
            * python/dbus_bindings.pyx: Tweak 'raise AssertionError' to assert().
            Add checking for the end of struct character when marshalling a
            struct in MessageIter.append_strict.
    
            * python/examples/example-service.py,
            python/examples/gconf-proxy-service.py,
            python/examples/gconf-proxy-service2.py: Update to use gobject
            mainloop directly rather than appearing to depend on gtk.
    
            * python/test/test-client.py, python/test/test-server.py: Remove
            obsolete and broken test scripts for old bindings. We have up to date
            and working tests in test/python/.

:100644 100644 fe6e777... c693a3d... M	python/dbus_bindings.pyx
:100644 100644 ce871a1... cb25d20... M	python/examples/example-service.py
:100644 100644 b9bdef1... a899cf2... M	python/examples/gconf-proxy-service.py
:100644 100644 ba8d249... 5731ab2... M	python/examples/gconf-proxy-service2.py
:100644 000000 5dc6e20... 0000000... D	python/tests/test-client.py
:100644 000000 235da70... 0000000... D	python/tests/test-server.py

commit a10facab362212f630b4fc3191a711523ed367b1
Author: Robert McQueen <robot101@debian.org>
Date:   Sat Oct 29 19:13:17 2005 +0000

    2005-10-29 Robert McQueen <robot101@debian.org>
    
            * python/decorators.py: Add optional arguments to the method and
            signal decorators to allow you to specify the signature of arguments
            and return values. Preserve the doc strings of signal functions in the
            decorated version, for pydoc and friends.
    
            * python/dbus_bindings.pyx, python/proxies.py: Replace the
            parse_signature_block function with an iterable dbus.Signature()
            type. Fix a bug in MessageIter.append_strict where you could append
            anything by claiming it was a string.
    
            * python/service.py: Use the out_signature decoration on methods to
            marshal return values, meaning you no longer require dbus.Array()
            or dbus.Dictionary() to indicate the type when returning empty
            arrays or dictionaries. Fix a bug where exceptions which are defined
            in __main__ are not turned into error replies.
    
            * test/python/test-client.py, test/python/test-service.py: Add test
            for correct marshalling of return values according to out_signature.
            Fix a bug in the async call test where the error_handler is missing a
            self argument.

:100644 100644 4bf0893... fe6e777... M	python/dbus_bindings.pyx
:100644 100644 b94babc... 8b55373... M	python/decorators.py
:100644 100644 efa2b50... f1f3394... M	python/proxies.py
:100644 100644 0cc2ed9... ce251ed... M	python/service.py

commit b07e4f860f8d9ff323558e8276dbda346a09b3b1
Author: Robert McQueen <robot101@debian.org>
Date:   Mon Oct 24 18:29:50 2005 +0000

    2005-10-24 Robert McQueen <robot101@debian.org>
    
        * python/dbus_bindings.pyx (String, MessageIter): make D-Bus strings
        derive from unicode instead of str, and encode/decode UTF-8 when
        marshalling/unmarshalling bus messages
    
        * python/introspect_parser.py: encode introspection data as UTF-8
        before passing the buffer into libxml2
    
        * test/python/test-client.py: add unicode test strings
    
        * test/data/valid-service-files/.cvsignore, test/python/.cvsignore:
        ignore generated python test files

:100644 100644 f7c8800... 4bf0893... M	python/dbus_bindings.pyx
:100644 100644 6e94ccc... 40cae1e... M	python/introspect_parser.py

commit 5b923c8dd10dc21e7f03aa8e27d1bb30652fb5da
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Oct 18 04:38:04 2005 +0000

    * glib/dbus-gvalue-utils.c (hash_free_from_gtype): handle gdouble
    
    and G_TYPE_VALUE_ARRAY (DBUS_TYPE_STRUCT)
    (gvalue_from_hash_value, hash_value_from_gvalue): handle gdouble
    
    * glib/dbus-gvalue.c (dbus_gvalue_to_signature): add missing
    DBUS_STRUCT_BEGIN_CHAR and DBUS_STRUCT_END_CHAR charaters
    when constructing struct signatures
    
    * python/_dbus.py (Bus): handle private connections using the
    private keyword in the constructor. defaults to private=False
    (Bus::close): new method to close a connection to the bus
    
    * python/dbus_bindings.pyx (Connection::close): renamed method
    was previously called disconnect
    (bus_get): now supports getting a private connection
    
    * python/proxies.py (ProxyMethod::__call__): check if ignore_reply
    keyword is set to True.  if it is, execute the method without waiting
    for a reply
    (ProxyObject::_introspect_execute_queue): new method for executing
    all the pending methods that were waiting for the introspect to
    finish.  this is called when introspect either succeeds or fails
    (ProxyObject::_introspect_error_handler): call queued methods

:100644 100644 890cdda... 2e7e671... M	python/_dbus.py
:100644 100644 35ad492... f7c8800... M	python/dbus_bindings.pyx
:100644 100644 ee2a3f7... efa2b50... M	python/proxies.py

commit cb8652321a7b3791f54a6fb1ebf1675aac9ac33d
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Oct 14 21:44:00 2005 +0000

    * python/dbus_bindings.pyx (MessageIter::append_strict): check for STRUCT_BEGIN not TYPE_STRUCT in indicate we are marshalling a struct
    
    * python/service.py (Object::_message_cb): handle exceptions correctly
      by sending them over the wire to the calling app.  This makes sure
      the client returns immediately instead of waiting the 15 seconds to
      timeout.
    
    * test/python/test-client.py (TestDBusBindings::testBenchmarkIntrospect):
      Add a test to benchmark how long it takes to introspect a service and
      call a method which returns a large element (pretty fast)
    
    * test/python/test-service.py (TestObject::GetComplexArray): new test
      method which pushes a lot of data

:100644 100644 0060373... 35ad492... M	python/dbus_bindings.pyx
:100644 100644 a439183... 0cc2ed9... M	python/service.py

commit d468280ea6cf7be2c3729a182f3c252fd2a7b999
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Oct 13 23:34:11 2005 +0000

    * python/service.py(ObjectType::_reflect_on_signal, _reflect_on_method):
    
    reclaim memory outside of the loop and use del istead of just setting
    the key to None

:100644 100644 efdda12... a439183... M	python/service.py

commit fb3300cea133630f45d13776a66dcbbd71c46d97
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Oct 13 23:26:00 2005 +0000

    * python/service.py (ObjectType::_reflect_on_signal): Always close
    
    signal tag even when there are no arguments

:100644 100644 ae3e3b1... efdda12... M	python/service.py

commit 137d6a5121de6ae44a37ca99c5519c4300cc9dea
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Oct 6 04:43:52 2005 +0000

    * actualy add the introspection parser to CVS :-)

:000000 100644 0000000... 6e94ccc... A	python/introspect_parser.py

commit 423589e748db1783cbce03452e5fe5685b83f750
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Wed Oct 5 20:43:46 2005 +0000

    * glib/dbus-gvalue.c (marshal_variant): call _dbus_gvalue_marshal instead of marshal basic so we can handle recursive types in a variant
    
    * test/glib/test-dbus-glib.c: Add test for marshaling recurive types
      in variants
    
    * test/glib/test-service-glib.c, test-service-glib.xml
      (my_object_echo_variant [EchoVariant],
      my_object_process_variant_of_array_of_ints123
      [ProcessVariantOfArrayOfInts123]):
      Add two test methods
    
    * python/introspect_parser.py: New module for parsing introspect
      data.
    
    * python/dbus_bindings.pyx:
      (various places): when throwing errors fix to use errormsg instead
      of message local variable because Pyrex can get confused with other
      message variables (initial patch by Robert McQueen
      <robert.mcqueen at collabora.co.uk>)
      (MessageIter::parse_signature_block): new method for getting the next
      block in a signiture.
      (MessageIter::append_strict): new method for appending values strictly
      using the passed in signature instead of guessing at the type
      (MessageItter:: append_dict, append_struct, append_array): use
      signatures to marshal children if the signature is available
    
    * python/exceptions.py (IntrospectionParserException): new exception
    
    * python/proxies.py (ProxyMethod::__call__): Marshal args with
      introspected signatures if available, else we fall back to the
      old way of doing things.
      (ProxyObject::_introspect_reply_handler ): parse introspection data
    
    * python/service.py (ObjectType::_reflect_on_method): Properly
      terminate <method> if there are no args in the reflection data
    
    * test/python/test-client.py: add tests for talking with the GLib
      test server.  This gives us better coverage for introspection since
      python to python will always generate arguments as variants.  It also
      allows us to test the robustness of the GLib bindings and interlanguage
      communications.

:100644 100644 78bc134... ea261cb... M	python/Makefile.am
:100644 100644 6c762d3... 0060373... M	python/dbus_bindings.pyx
:100644 100644 b9df815... 5cb8d5a... M	python/exceptions.py
:100644 100644 f41a8de... ee2a3f7... M	python/proxies.py
:100644 100644 bfe8fa5... ae3e3b1... M	python/service.py

commit 747ebb525b3522cab2415fe55c6a8418a7528238
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Mon Sep 26 22:12:17 2005 +0000

    * dbus/Python.pyx: Fixed memory leaks when throwing errors. We now copy the message from a DBusError and then free the error object befor throwing the error

:100644 100644 3108a3f... 6c762d3... M	python/dbus_bindings.pyx

commit 583a8acad47cf49f9e28d8f7360f8bb1a409e0d4
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Sep 6 22:42:54 2005 +0000

    - update to next release version

:100644 100644 4fdc0e9... 7d93783... M	python/__init__.py

commit 8f6b65becb2183f68e5c923854c4b5946a40dbfd
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Sep 6 22:38:54 2005 +0000

    * Released 0.50
    
    * Patch from Steve Grubb:
    - bus/activation.c (bus_activation_service_reload_test): clean up
    some indentation
    - dbus/dbus-keyring.c (_dbus_keyring_reload): fix conditional
    - dbus/dbus-message-factory.c (generate_special): fix a couple of
    buffer overflows in the test suite.  This is non critical because
    it can not be exploited and this code is only run when doing a
    make check.
    
    * Patch from Yaakov Selkowitz: Build fixes for Cygwin
    - configure.in: Don't check and link against kdecore, only qt headers
    - dbus/Makefile.am: Add -no-undefined to libdbus_1_la_LDFLAGS
    - gcj/org/freedesktop/dbus/Makefile.am:
    add libdbus_gcj_1_la_LDFLAGS = -no-undefined
    - glib/Makefile.am: Add -no-undefined to libdbus_glib_1_la_LDFLAGS
    and $(DBUS_GLIB_LIBS) to dbus_binding_tool_LDADD
    - qt/Makefile.am: Add -no-undefined to libdbus_qt_1_la_LDFLAGS
    - tools/Makefile.am: Add platform extentions to binaries
    (i.e. .exe on windows)
    
    * configure.in:
    - Make it so if no suitable version of python is found we only
    disable building python instead of exiting the configure script
    - Require version 2.4 of glib for glib bindings
    - Up version to 0.50
    
    * python/__init__.py: Sync version with libdbus to (0,50,0)

:100644 100644 a1ff407... 4fdc0e9... M	python/__init__.py

commit c9ce6ac673fef6ca5189480d73b542e7f2c283f3
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Sep 1 01:22:06 2005 +0000

    * python/Makefile.am: Break on pyrexc errors instead of ignoring them
    
    * python/dbus_bindings.pyx: Memory management foo
    (global): remove hacky _user_data_references global list
    (GIL_safe_cunregister_function_handler): userdata now stuffed into
    tuples. Unref user_data
    (GIL_safe_cmessage_function_handler): userdata now stuffed into tuples
    (Connection::__del__): Remove and replace with __dealloc__ method
    (Connection::add_filter): Stuff user_data into a tuple.  Use Py_INCREF
    to keep tuple from being deallocated instead of the global var hack
    (Connection::register_object_path): Stuff user_data into a tuple.
    Use Py_INCREF to keep tuple from being deallocated instead of the
    global var hack
    (Connection::register_fallback): Stuff user_data into a tuple.
    Use Py_INCREF to keep tuple from being deallocated instead of the
    global var hack
    (GIL_safe_pending_call_notification): Don't unref the message
    because it gets unreffed when going out of scope.  Py_XDECREF
    the user_data
    (PendingCall::__del__): Remove and replace with __dealloc__ method
    (PendingCall::set_notify): ref the pending call because we will
    need it to stick around for when the notify callback gets called
    (Message::__del__): Remove and replace with __dealloc__ method
    
    * python/dbus_glib_bindings.pyx (init_gthreads): Changed to
    gthreads_init to match up with the dbus call
    
    * python/glib.py (init_threads): Changed to threads_init to match
    up with gobject.threads_init().  init_threads is kept for backwards
    compat but will most likely be deprecated in the future
    
    * test/python/test-client.py:
    - revamp to use Python's unittest functionality
    - add async call tests
    - setup threads in glib and dbus so we make sure locks are working

:100644 100644 52ba8e5... 78bc134... M	python/Makefile.am
:100644 100644 2871ae8... 3108a3f... M	python/dbus_bindings.pyx
:100644 100644 e432352... 3e2e33b... M	python/dbus_glib_bindings.pyx
:100644 100644 8e78142... e1c3d9c... M	python/glib.py

commit c33b023b7a72b42129e202ad3a34d9ac6bc68090
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Wed Aug 31 02:18:43 2005 +0000

    * python/dbus_bindings.pyx
    
    (_pending_call_notification, cunregister_function_handler,
    cmessage_function_handler): All callback functions have been rearranged
    to workaround a bug in Pyrex when working with the GIL which is Python's
    global lock when dealing with threads.  They have been split into
    a wrapper function (which assumes the name of the old function) and
    a _GIL_safe_<function name> function which contains the functionality
    of the old function.  This ensures that Pyrex does not write code
    the lock is released.

:100644 100644 6973944... 2871ae8... M	python/dbus_bindings.pyx

commit ccba1a75d274300215ac3b8eb06792c06679de55
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Aug 30 15:21:04 2005 +0000

    * python/dbus_bindings.pyx (_pending_call_notification): Obtain the GIL global lock when calling back into Python

:100644 100644 ee3e648... 6973944... M	python/dbus_bindings.pyx

commit 780a08253b6e9ac0270d50cb0498cb7085bd05a2
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Aug 26 04:23:33 2005 +0000

    * s/Message(_create=0)/EmptyMessage everywhere else
    
    * test/python/test-{server|client}.py: add the python/.libs directory
      to the lookup path so dbus_bindings and dbus_glib_bindings don't
      get picked up from the system

:100644 100644 93a9473... ee3e648... M	python/dbus_bindings.pyx

commit 068820cbec569f14277f0dc52e4219ad123bed24
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Aug 26 03:09:58 2005 +0000

    * python/dbus_bindings.pyx: Tracked down a major memleak and fixed it (EmptyMessage): new class that subclasses Message. This is a workaround to a Pyrex bug that fails to call __del__ when the Message object goes out of scope. For some reason subclassing Message fixes this bug (Bus::send_with_reply_and_block): use EmptyMessage instead of Message

:100644 100644 a083f50... 93a9473... M	python/dbus_bindings.pyx
:100644 100644 4286642... f41a8de... M	python/proxies.py

commit 749873c6f8326c450173f62078c8eb8f38e7e2f7
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Wed Aug 24 19:58:32 2005 +0000

    - Merged changed from the DBUS_0_36_1 bugfix branch

:100644 100644 a688a13... 52ba8e5... M	python/Makefile.am
:100644 100644 2a290bd... 890cdda... M	python/_dbus.py
:100644 100644 c7dc02b... 4286642... M	python/proxies.py

commit c93ba0371f2bed41ceb47826dea8852b6b6107cf
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Aug 23 17:43:59 2005 +0000

    * python/dbus_glib_bindings.pyx: reorder imports and c definitions
    
    to fix some wranings. We now use dbus_bindings.DBusConnection instead
    of defining DBusConnection ourselves.

:100644 100644 314fada... e432352... M	python/dbus_glib_bindings.pyx

commit 0caa747c4dac110d7a1550cfcded41c03d5bf4f7
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Aug 18 20:57:28 2005 +0000

     * python/dbus.pth: New path file to fix up problems when installing c libraries to lib64 and python files to lib.
    
    	* python/Makefile.am: install dbus.pth in the correct spot

:100644 100644 3621800... a688a13... M	python/Makefile.am
:000000 100644 0000000... e2182f1... A	python/dbus.pth

commit 53aee6867499fb4b2135ed06dd5c4c6cd96058e0
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Aug 18 04:04:57 2005 +0000

     * ChangeLog: clean up my last entry a bit
    
    	* doc/introspect.xsl: New stylesheet for converting introspection data
    	into browser renderable xhtml. Contributed by Lennart Poettering.
    
    	* doc/introspect.dtd: Fixups in the introspect format from Lennart
    	Poettering.
    
    	* doc/dbus-tutorial.xml:
    	- Add Colin Walter to the Authors section for authoring the GLib
    	section
    	- Add descriptions of the new signature and type functionality
    	in the Python complex type mapping section
    	- Add a sidenote on the new args matching functionality in
    	the Python bindings
    	- Fixed up some of the examples to use the gobject.MainLoop
    	instead of gtk.main
    
    	* python/_dbus.py:
    	(Bus::_create_args_dict): New. Converts a hash of arg matches
    	to a more useable format
    	(Bus::add_signal_receiver): add a **keywords parameter for catching
    	arg match parameters
    	(Bus::remove_signal_receiver): add a **keywords parameter for catching
    	arg match parameters
    
    	* python/matchrules.py:
    	(MatchTree::exec_matches): Check for arg matches
    	(SignalMatchRule::add_args_match): New method
    	(SignalMatchRule::execute): Added args_list parameter as an optimization
    	so we don't have to marshal the args more than once
    	(SignalMatchRule::match_args_from_list): New method that checks to see
    	if the rule's arg matches match an argument list.  Only arguments
    	set in the rule are checked.
    	(SignalMatchRule::match_args_from_rule): New method that checks to see
    	if the rule's arg matches match another rule's.  All args have to match
    	in order for this method to return true.  If either rule has more args
    	then it is not a match.
    	(SignalMatchRule::is_match): Add args match
    	(SignalMatchRule::repr): Add args to the final output if they exist

:100644 100644 6074be1... 2a290bd... M	python/_dbus.py
:100644 100644 558a41f... a06d494... M	python/examples/example-signal-recipient.py
:100644 100644 d65e392... 3a2fbed... M	python/matchrules.py

commit 4f3ccf5fd76cacb67b1a73c7a88b00fe83180275
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Aug 16 22:54:02 2005 +0000

     * python/__init__.py: Version updated (0, 43, 0)
    
    	* python/dbus_bindings.pyx:
    	- Fixed type objects to have self passed into __init__
    	- Added the Variant type
    	- Add the ability to specify types or signatures for Array, Variant and Dictionary
    	- (Connection::send_with_reply_handlers): return a PendingCall object
    	- (_pending_call_notification): handle the case when an error is returned
    	without an error message in the body
    	- (MessageIter::get_boolean): return True or False instead of an integer
    	- (MessageIter::python_value_to_dbus_sig): add direct checking of types and
    	add checks for objects with embeded signatures or types (Array, Variant and
    	Dictionary)
    	- (MessageIter::append_byte): handle case when the value is a dbus.Byte
    	- (MessageIter::append_dict): handle embeded types or signatures
    	- (MessageIter::append_array): handle embeded types or signatures
    	- (MessageIter::append_variant): new method
    
    	* python/proxies.py:
    	- (DeferedMethod): New. Dummy executable object used when queuing calls blocking on
    	introspection data
    	- (ProxyMethod::__call__): add the timeout keyword for specifying longer or
    	shorter timeouts for method calls
    	- (ProxyObject): Add first pass at an introspection state machine
    	- (ProxyObject::__init__): Add introspect keyword for turing off an on
    	introspection.
    	- (ProxyObject::_Introspect): Internal Introspect call that bypasses the usual
    	mechanisms for sending messages.  This is to avoid a deadlock where the Intospect
    	call would be queued waiting for the Introspect call to finish ;-)
    	- (ProxyObject::_introspect_reply_handler): New.  This method is called when
    	introspection returns with no error
    	- (ProxyObject::_introspect_error_handler): New.  This method is called when
    	introspection encounters an error
    	- (ProxyObject::__getattr__): Code to handle different introspection states.
    	Queue async calls or block blocking calls if we are introspecting.  Pass through
    	as normal if we are not or are done with introspecting.
    
    	* python/service.py: Import signal and method from decorators.py
    
    	* python/types.py: Add Variant type

:100644 100644 945ef67... a1ff407... M	python/__init__.py
:100644 100644 f0c7b06... 6074be1... M	python/_dbus.py
:100644 100644 608ef54... a083f50... M	python/dbus_bindings.pyx
:100644 100644 7439e6b... 3d170bd... M	python/examples/example-client.py
:100644 100644 d428055... 4cad871... M	python/examples/list-system-services.py
:100644 100644 95c98a9... c7dc02b... M	python/proxies.py
:100644 100644 edaef63... bfe8fa5... M	python/service.py
:100644 100644 1a01d8e... f3d348c... M	python/types.py

commit 3ff048fc5ad215987749046e283ca97454bc7554
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Wed Jul 20 14:15:08 2005 +0000

    * python/_dbus.py, _util.py, decorators.py, extract.py, matchrules.py. proxies.py, service.py: Cleanup of code after running it through the pyflakes code checker mostly dealing with undefined names. (Bug #3828, Patch from Anthony Baxter <anthony@interlink.com.au>)

:100644 100644 7bab585... f0c7b06... M	python/_dbus.py
:100644 100644 3f7061c... c254178... M	python/_util.py
:100644 100644 2deec6d... b94babc... M	python/decorators.py
:100644 100644 f836edc... 3cdb975... M	python/extract.py
:100644 100644 9a7edb3... d65e392... M	python/matchrules.py
:100644 100644 688dd8a... 95c98a9... M	python/proxies.py
:100644 100644 f6a1c7f... edaef63... M	python/service.py

commit a076f4405829b136edbb89d99fbc485c9179b642
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Sun Jul 17 21:02:56 2005 +0000

    * Merge DBUS_0_35_2 branch into HEAD
    
    2005-07-17  John (J5) Palmieri  <johnp@redhat.com>
    
            * NEWS: Update to 0.35.2
    
    2005-07-17  John (J5) Palmieri  <johnp@redhat.com>
    
            * python/_dbus.py: Remove import of the dbus.services
            module as it no longer exists (patch from Dimitur Kirov)
    
            * python/service.py (Object::__init__): Fixed typo
            s/name/bus_name (patch from Dimitur Kirov)
    
            * python/examples/example-signal-emitter.py: import dbus.glib
            to get the main loop and use glib mainloop instead of gtk so
            X doesn't have to be running.
    
            * python/examples/example-signal-recipient.py: import dbus.glib
            to get the main loop and use glib mainloop instead of gtk so
            X doesn't have to be running. Import the decorators module
            directly.
    
            * test/glib/Makefile.am:  Added DIST_EXTRA files that distcheck
            didn't pick up on but are needed to build
    
            * configure.in: upped version to 0.35.2
    
            * bus/driver.c, bus/selinux.c, bus/selinux.h, dbus/dbus-protocol.h:
            added Colin Walters' SELinux API rename patch from head
            s/unix sercurity context/selinux security context/
    
    2005-07-16  John (J5) Palmieri  <johnp@redhat.com>
    
            * python/Makefile.am: dbus_binding.pxd.in should be included
            in EXTRA_DIST not dbus_binding.pxd
            fix up $(srcdir) hopefully for the last time
    
            * NEWS: Update to 0.35.1

:100644 100644 302ed0d... 3621800... M	python/Makefile.am
:100644 100644 652d27b... 7bab585... M	python/_dbus.py
:100644 100644 f81ac3f... 02eff89... M	python/examples/example-signal-emitter.py
:100644 100644 681dd7c... 558a41f... M	python/examples/example-signal-recipient.py
:100644 100644 18a2c81... f6a1c7f... M	python/service.py

commit cf7d10b2e4240c5c2bd4df4a1f2cf5b76aa499c0
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Jul 15 20:28:05 2005 +0000

    * glib/Makefile.am: Add make-dbus-glib-error-switch.sh to EXTRA_DIST so distcheck doesn't fail
    
    * glib/examples/Makefile.am: Add example-service.xml and
      example-signal-emitter.xml to EXTRA_DIST so distcheck doesn't fail
    
    * glib/examples/statemachine/Makefile.am: Add statemachine.xml and
      statemachine-server.xml to EXTRA_DIST so distcheck doesn't fail
    
    * python/Makefile.am: Preprend $(srcdir)/ to source files so the
      compiler looks in the right places during distcheck

:100644 100644 7bedfd0... 302ed0d... M	python/Makefile.am

commit dc94fa7e3cd71c0dd29b4899bb0d956dc4019b34
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Jul 15 18:09:59 2005 +0000

    * python/examples/example-service.py, python/examples/example-signal-emitter.py: Fixed up examples for API changes

:100644 100644 00f3993... ce871a1... M	python/examples/example-service.py
:100644 100644 64474e8... f81ac3f... M	python/examples/example-signal-emitter.py

commit 8b4ad749be5c97607ad2c0c3bcf1fc41c4877bf5
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Jul 15 17:33:17 2005 +0000

    * python/__init__.py: Upped to version (0,42,0) because of the API change

:100644 100644 069a432... 945ef67... M	python/__init__.py

commit 96a7dee3c739e4c5eb6b18cc093bec41bb42da35
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Jul 15 15:21:43 2005 +0000

    * bus/dispatch.c, test/test-service.c: Add testcase for sending messages to oneself (TODO item).
    
    * python/service.py (class Object): Swap ordering of bus_name
      and object_path parameters to better support inheritance.
    
    * doc/dbus-tutorial.xml: change Python docs to reflect change
      in parameter ordering and fix the inheritance section.
    
    * doc/TODO: remove sending message to oneself TODO item

:100644 100644 b7504dc... 18a2c81... M	python/service.py

commit 557f47a57fed5a5b4e56677ed0cf5ae8f2987536
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Jul 15 02:15:07 2005 +0000

    * python/_dbus.py (Bus::remove_signal_receiver): don't add a callback to the match if none has been passed in
    
    * python/matchrules.py (SignalMatchTree::remove): if the rule
      being matched does not have a callback treat it as a wildcard
      fix matching logic
    
    * doc/dbus-tutorial.xml: Add Python tutorial

:100644 100644 d52aa8f... 652d27b... M	python/_dbus.py
:100644 100644 6d5fcd8... 9a7edb3... M	python/matchrules.py

commit ea23dea1046cb6e9fdb2d618a53e61d1d61b1f53
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Jul 14 20:44:15 2005 +0000

    Checking in Rodrigo's patch along with my fixes to the patch
    
    2005-07-14  John (J5) Palmieri  <johnp@redhat.com>
    
    	* bus/activation.c: clean up all tabs to be 8 spaces
    	(bus_activation_activate_service): make sure we clean up
    	if activation fails
    
    	* bus/dispatch.c: clean up all tabs to be 8 spaces
    	(check_shell_fail_service_auto_start): New function
    	tests to make sure we get fail properly when trying to auto start a service
    	with a faulty command line
    	(check_shell_service_success_auto_start): New function tests to make sure
    	auto started services get the arguments on the command line
    
    	* test/test-shell-service.c: Added service for testing auto-starting with
    	command line arguments
    
    	* test/data/valid-service-files/debug-shell-echo-fail.service.in,
    	test/data/valid-service-files/debug-shell-echo-success.service.in:
    	Added service files for testing auto-starting with command line arguments
    
    	* */.cvsignore: added a bunch of generated files to various .cvsignore files
    
    2005-07-14  Rodrigo Moya  <rodrigo@novell.com>
    
    	* dbus/dbus-shell.[ch]: copy/pasted code from GLib.
    
    	* dbus/Makefile.am: added new files to build.
    
    	* bus/activation.c (bus_activation_activate_service): support
    	activation commands with parameters.
    
    	* test/shell-test.c: added test program for the shell parsing
    	code.

:100644 100644 9c73bb7... cce7eea... M	python/.cvsignore
:100644 100644 81a8367... 7bedfd0... M	python/Makefile.am

commit 008027f4fafbbb77a45c0fa586855552c9564696
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Wed Jul 13 18:22:34 2005 +0000

    * python/.cvsignore: remove dbus_bindings.pyx, add dbus_bindings.pxd
    
    * python/service.py (class Name): renamed BusName to make it clearer
      what the object is for (a name on the bus)
    
    * python/examples/example-service.py,
      python/examples/example-signal-emitter.py: change the Name object to
      BusName

:100644 100644 4a73b5b... 9c73bb7... M	python/.cvsignore
:100644 100644 9e2f193... 00f3993... M	python/examples/example-service.py
:100644 100644 64c7f17... 64474e8... M	python/examples/example-signal-emitter.py
:100644 100644 fc044af... b7504dc... M	python/service.py

commit ac9ab9544b98222fcce9329194f10774edea8a87
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Jul 12 18:16:05 2005 +0000

    * python/dbus_bindings.pyx.in: removed
    
    * python/dbus_bindings.pyx: Added.
    	- Fixed some memleaks (patch from
    	  Sean Meiners <sean.meiners@linspireinc.com>)
    	- Broke out the #include "dbus_h_wrapper.h" and put it in its
    	  own pxd file (Pyrex definition)
    	- Broke out glib dependancies into its own pyx module
    
    * python/dbus_bindings.pdx: Added.
    	- Defines C class Connection for exporting to other modules
    
    * python/dbus_glib_bindings.pyx: Added.
    	- New module to handle lowlevel dbus-glib mainloop integration
    
    * python/glib.py: Added.
    	- Registers the glib mainloop when you import this module
    
    * python/services.py: Removed (renamed to service.py)
    
    * python/service.py: Added.
    	- (class Server): renamed Name
    
    * python/__init__.py: Bump ro version (0,41,0)
    	- don't import the decorators or service module
       	  by default.  These now reside in the dbus.service namespace
    
    * python/_dbus.py (Bus::__init__): Add code run the main loop
      setup function on creation
    
    * python/examples/example-service.py,
      python/examples/example-signal-emitter.py: update examples
    
    * python/examples/gconf-proxy-service.py,
      python/examples/gconf-proxy-service2.py: TODO fix these up
    
    * doc/TODO: Addition
    	- Added a Python Bindings 1.0 section
    	- added "Add match on args or match on details to match rules"

:100644 100644 b5ee424... 81a8367... M	python/Makefile.am
:100644 100644 ebeb420... 069a432... M	python/__init__.py
:100644 100644 d559ce1... d52aa8f... M	python/_dbus.py
:000000 100644 0000000... f170720... A	python/dbus_bindings.pxd.in
:000000 100644 0000000... 608ef54... A	python/dbus_bindings.pyx
:100644 000000 34341c4... 0000000... D	python/dbus_bindings.pyx.in
:000000 100644 0000000... 314fada... A	python/dbus_glib_bindings.pyx
:100644 100644 9963454... 9e2f193... M	python/examples/example-service.py
:100644 100644 428f144... 64c7f17... M	python/examples/example-signal-emitter.py
:100644 100644 18c8047... b9bdef1... M	python/examples/gconf-proxy-service.py
:100644 100644 3667a85... ba8d249... M	python/examples/gconf-proxy-service2.py
:000000 100644 0000000... 8e78142... A	python/glib.py
:000000 100644 0000000... fc044af... A	python/service.py
:100644 000000 7e0b58b... 0000000... D	python/services.py

commit 5f5b7847e7a159e040bc9070a143cd6547a9689b
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Jun 28 19:36:51 2005 +0000

    * python/dbus_bindings.pyx.in (cunregister_function_handler, cmessage_function_handler): Patch from Anthony Baxter <anthony@interlink.com.au> fixes threading problems by using the Py_GILState_Ensure/Release to synchronize with the python runtime.

:100644 100644 3c81993... 34341c4... M	python/dbus_bindings.pyx.in

commit b9ef3eaf17a91f258af17c6e9ae8acb23eb7b411
Author: Colin Walters <walters@verbum.org>
Date:   Thu Jun 16 05:51:46 2005 +0000

    2005-06-16 Colin Walters <walters@verbum.org>
    
    	* python/dbus_bindings.pyx.in: Import size_t,
    	__int64_t, __uint64_t, and __signed.
    
    	* dbus/dbus-sysdeps.c <HAVE_CMSGCRED> (write_credentials_byte):
    	Define cmsg struct, output it.
    	(_dbus_read_credentials_unix_socket):
    	Use cmsg struct.
    
    	Patch from Joe Markus Clarke for FreeBSD support.

:100644 100644 8689d8c... 3c81993... M	python/dbus_bindings.pyx.in

commit 4a8fc73472c80880c0c6c5cf1401f3ab9817965f
Author: Colin Walters <walters@verbum.org>
Date:   Mon Jun 13 03:01:17 2005 +0000

    2005-06-12 Colin Walters <walters@verbum.org>
    
    	Async signals and various bugfixes and testing by
    	Ross Burton <ross@burtonini.com>.
    
    	* glib/dbus-gvalue.h: (struct DBusBasicGValue): Delete.
    	(dbus_gvalue_genmarshal_name_from_type)
    	(dbus_gvalue_ctype_from_type): Moved to dbus-binding-tool-glib.c.
    	(dbus_gtype_to_dbus_type): Renamed to dbus_gtype_from_signature.
    	(dbus_g_value_types_init, dbus_gtype_from_signature)
    	(dbus_gtype_from_signature_iter, dbus_gtype_to_signature)
    	(dbus_gtypes_from_arg_signature): New function prototypes.
    	(dbus_gvalue_demarshal): Take context and error arguments.
    	(dbus_gvalue_demarshal_variant): New function.
    	(dbus_gvalue_demarshal_message): New function.
    	(dbus_gvalue_store): Delete.
    
    	* glib/dbus-gvalue.c:
    
    	File has been almost entirely rewritten; now we special-case
    	more types such as DBUS_TYPE_SIGNATURE, handle arrays and
    	hash tables correctly, etc.  Full support for recursive values
    	is not yet complete.
    
    	* glib/dbus-gproxy.c (dbus_g_proxy_class_init): Change last
    	argument of signal to G_TYPE_POINTER since we now pass a
    	structure.
    	(lookup_g_marshaller): Delete in favor of
    	_dbus_gobject_lookup_marshaller.
    	(marshal_dbus_message_to_g_marshaller): Use
    	_dbus_gobject_lookup_marshaller and dbus_gvalue_demarshal_message
    	to handle remote signal callbacks.
    	(dbus_g_proxy_new_from_proxy): New function; creates a new
    	DBusGProxy by copying an existing one.
    	(dbus_g_proxy_get_interface, dbus_g_proxy_set_interface)
    	(dbus_g_proxy_get_path): New functions.
    	(dbus_g_proxy_marshal_args_to_message): New function;
    	factored out of existing code.
    	(DBUS_G_VALUE_ARRAY_COLLECT_ALL): Collect all arguments
    	from a varargs array.
    	(dbus_g_proxy_begin_call_internal): New function.
    	(dbus_g_proxy_end_call_internal): New function.
    	(dbus_g_proxy_begin_call): Take GTypes instead of DBus types
    	as arguments; simply invoke dbus_g_proxy_begin_call_internal
    	after collecting args into value array.
    	(dbus_g_proxy_end_call): Take GTypes instead of DBus types;
    	invoke dbus_g_proxy_end_call_internal.
    	(dbus_g_proxy_invoke): Simply invoke begin_call_interanl and
    	end_call_internal.
    	(dbus_g_proxy_call_no_reply): Take GTypes instead of DBus
    	types.
    	(array_free_all): New function.
    	(dbus_g_proxy_add_signal): Take GTypes.
    
    	* glib/dbus-gobject.h:
    	(_dbus_glib_marshal_dbus_message_to_gvalue_array): Delete.
    	(_dbus_gobject_get_path, _dbus_gobject_lookup_marshaller):
    	Prototype.
    
    	* glib/dbus-gobject.c: Add a global marshal_table hash which
    	stores mappings from type signatures to marshallers.  Change lots
    	of invocations of dbus_gtype_to_dbus_type to
    	dbus_gtype_to_signature.
    	(_dbus_glib_marshal_dbus_message_to_gvalue_array): Delete.
    	(introspect_signals): Fix test for query.return_type.
    	(set_object_property): Update invocation of dbus_gvalue_demarshal.
    	(invoke_object_method): Many changes.  Handle asynchronous
    	invocations.  Convert arguments with
    	dbus_gvalue_demarshal_message.  Handle errors.  Use
    	DBusSignatureIter instead of strlen on args. Handle all arguments
    	generically.  Special-case variants.
    	(dbus_g_method_return, dbus_g_method_return_error): New function.
    	(DBusGSignalClosure): New structure, closes over signal
    	information.
    	(dbus_g_signal_closure_new): New function.
    	(dbus_g_signal_closure_finalize): New function.
    	(signal_emitter_marshaller): New function; is special marshaller
    	which emits signals on bus.
    	(export_signals): New function; introspects object signals and
    	connects to them.
    	(dbus_g_object_type_install_info): Take GType instead of
    	GObjectClass.
    	(dbus_g_connection_register_g_object): Invoke export_signals.
    	(dbus_g_connection_lookup_g_object): New function.
    	(DBusGFuncSignature) New structure; used for mapping type
    	signatures to marshallers.
    	(funcsig_hash): New function; hashes DBusGFuncSignature.
    	(funcsig_equal): New function; compares DBusGFuncSignature.
    	(_dbus_gobject_lookup_marshaller): New function.
    	(dbus_g_object_register_marshaller): New function; used to
    	register a marshaller at runtime for a particular signature.
    
    	* glib/dbus-gmain.c (_dbus_gmain_test): Add various tests.
    
    	* glib/dbus-binding-tool-glib.h: Add DBUS_GLIB_ANNOTATION_ASYNC
    	which notes a server method implementation should be
    	asynchronous.
    
    	* glib/dbus-binding-tool-glib.c
    	(dbus_binding_tool_output_glib_server): Call
    	dbus_g_value_types_init.
    	(write_formal_parameters): Use dbus_gtype_from_signature.  Handle
    	variants specially.
    	(dbus_g_type_get_lookup_function): Turn GType into an invocation
    	of a lookup function.
    	(write_args_for_direction): Use dbus_g_type_get_lookup_function.
    	(write_untyped_out_args): New method; write output arguments.
    	(write_formal_declarations_for_direction): Function for
    	writing prototypes.
    	(write_formal_parameters_for_direction): Function for
    	writing implementations.
    	(write_typed_args_for_direction): Function for writing
    	arguments prefixed with GTypes.
    	(write_async_method_client): Write out async version
    	of method.
    
    	* glib/dbus-binding-tool-glib.c: Include dbus-gvalue-utils.h.
    	(dbus_g_type_get_marshal_name): Move mapping from GType
    	to marshal name into here.
    	(dbus_g_type_get_c_name): Move into here.
    	(compute_marshaller): Convert signature to type with
    	dbus_gtype_from_signature, use dbus_g_type_get_marshal_name.
    	(compute_marshaller_name): Ditto.
    	(compute_marshaller): Handle async signal annotations.
    	(gather_marshallers): Return if we don't have a known
    	prefix.
    	(generate_glue): Collect introspection blob here, and
    	write all of the blob at the end.  This allows an object
    	with multiple interfaces to work.
    	Mark async methods in introspection blob.
    
    	* glib/Makefile.am (libdbus_glib_1_la_SOURCES): Add
    	dbus-gtype-specialized.c, dbus-gtype-specialized.h,
    	dbus-gvalue-utils.h, dbus-gvalue-utils.c.
    
    	* dbus/dbus-glib.h: Don't include dbus-protocol.h; this
    	avoids people accidentally using DBUS_TYPE_* which should
    	not be necessary anymore.
    	Do include dbus-gtype-specialized.h, which are utilities
    	for GLib container types.
    	Add various #defines for types such as
    	DBUS_TYPE_G_BOOLEAN_ARRAY.
    	(DBusGValueIterator, DBusGValue): Define, not fully used
    	yet.
    	(dbus_g_value_get_g_type): Type for recursive value.
    	(dbus_g_value_open, dbus_g_value_iterator_get_value)
    	(dbus_g_value_iterator_get_values, dbus_g_value_iterator_recurse)
    	(dbus_g_value_free): Prototypes.
    	(dbus_g_object_register_marshaller, dbus_g_proxy_new_from_proxy): Prototype.
    	(dbus_g_proxy_set_interface): Prototype.
    	(dbus_g_proxy_begin_call, dbus_g_proxy_end_call)
    	(dbus_g_proxy_call_no_reply): Take GLib types instead of DBus
    	types.
    	(dbus_g_proxy_get_path, dbus_g_proxy_get_interface):
    	Accessors.
    	(DBusGAsyncData, DBusGMethodInvocation): Structures for
    	doing async invocations.
    	(dbus_g_method_return, dbus_g_method_return_error):
    	Prototypes.
    	* doc/dbus-tutorial.xml: Update GLib section.
    
    	* tools/dbus-viewer.c (load_child_nodes): Update
    	for new invocation type of dbus_g_proxy_end_call.
    	(load_from_service_thread_func): Ditto.
    
    	* tools/print-introspect.c (main): Ditto.
    
    	* tools/dbus-names-model.c (have_names_notify)
    	(names_model_reload, names_model_set_connection)
    	Use GTypes.
    
    	* python/Makefile.am (INCLUDES): Define DBUS_COMPILATION,
    	needed since Python bindings use GLib bindings.
    
    	* test/glib/Makefile.am (INCLUDES): Define DBUS_COMPILATION.
    	Add --prefix argument.
    
    	* tools/Makefile.am: Define DBUS_COMPILATION.  Remove
    	unneeded --ignore-unsupported arg.
    
    	* test/glib/test-service-glib.c:
    	* test/glib/test-service-glib.xml:
    	* test/glib/test-dbus-glib.c: Add many more tests.

:100644 100644 23e9cea... b5ee424... M	python/Makefile.am

commit fc5d7298d72e20bfc3e209e44e6791643a838f49
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue May 24 16:34:38 2005 +0000

    * python/__init__.py: Python bindings deserve a minor version update. Upped to (0, 40, 2)

:100644 100644 0fd1d80... ebeb420... M	python/__init__.py

commit abd0204928614dc1d36125e9d3634c25e068af59
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue May 24 16:30:50 2005 +0000

    * python/decorators.py: add explicitly_pass_message decorator for passing in the dbus message as keyword for edge case signal handling
    
    * python/matchrules.py (SignalMatchRule.__repr__): fix output
      to conform with what dbus expects for match rules
      (SignalMatchRule.execute): add the dbus message as a keyword
      if the signal handler has requested it
    
    * python/examples/example/signal-recipient.py: added some more
      examples on how to hook up to signals
    
    * python/proxies.py: minor formatting changes

:100644 100644 d408704... d559ce1... M	python/_dbus.py
:100644 100644 7847b3a... 2deec6d... M	python/decorators.py
:100644 100644 2f932a9... 681dd7c... M	python/examples/example-signal-recipient.py
:100644 100644 e27c4c8... 6d5fcd8... M	python/matchrules.py

commit 1db6dbecffec574f6773286416f7e92ccd864068
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue May 24 00:21:07 2005 +0000

    * python/decorators.py: import dbus_bindings
    
    * python/matchrules.py (SignalMatchRule, SignalMatchTree,
      SignalMatchNode): new classes that implement wildcard signal
      callback matching using a tree lookup. Heavily modified from a
      patch sent by Celso Pinto (fd.o bug #3241)
    
    * _dbus.py (add_signal_receiver, remove_signal_receiver, _signal_func):
      use new match classes to handle signals.

:100644 100644 1cd40ee... 23e9cea... M	python/Makefile.am
:100644 100644 ca7a156... d408704... M	python/_dbus.py
:100644 100644 4be6e20... 7847b3a... M	python/decorators.py
:100644 100644 662c2bc... 428f144... M	python/examples/example-signal-emitter.py
:100644 100644 1dbf6a6... 2f932a9... M	python/examples/example-signal-recipient.py
:000000 100644 0000000... e27c4c8... A	python/matchrules.py

commit 717c3781328d631a16a74a8f51a7bb04d92729f6
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu May 19 20:27:19 2005 +0000

    - s/TYPE_PATH/TYPE_OBJECT_PATH

:100644 100644 8d41b1e... 8689d8c... M	python/dbus_bindings.pyx.in

commit 3979e97cf4245f720aed1764009a5d1fa875f595
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Mon May 16 21:27:03 2005 +0000

    * glib/dbus-gmain.c (io_handler_dispatch): fix deadlock when using recursive g_main_loops
    
    * python/_dbus.py (class Bus): add the ProxyObjectClass
      alias for ProxyObject to make it easier for the Twisted
      networking framework to integrate dbus.
    
    * python/proxies.py (class ProxyObject): add the ProxyMethodClass
      alias for ProxyMethod to make it easier for the Twisted
      networking framework to integrate dbus.

:100644 100644 d9c8123... ca7a156... M	python/_dbus.py
:100644 100644 cbd4920... 688dd8a... M	python/proxies.py

commit 0c2e7112539a1314393826dbd2a14c3c1239078a
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu May 5 18:27:34 2005 +0000

    * Fix my name in previous changelog ;)
    
    * python/proxies.py (ProxyObject.__getattr__): add further patch
      from Anthony Baxter to throw an AttributeError when python
      __special__ functions are called instead of marshling them over
      the bus (Bug#1685 comment 3).

:100644 100644 d8804c0... cbd4920... M	python/proxies.py

commit 933695891ea748308d76faaab23bc548c585b7b8
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu May 5 18:01:45 2005 +0000

    * python/Makefile.am: changed to use pyexecdir for the binding shared libraries (Bug#2494)
    
    * python/exceptions.py: bring exceptions over from the bindings
      so they can be used in applications (Bug#2036)
      Make all exceptions derive from DBusException
    
    * python/_dbus.py, python/proxies.py: implement __repr__ in a couple
      of classes so that print obj doesn't throw an exception (Bug #1685)

:100644 100644 f7a5631... 1cd40ee... M	python/Makefile.am
:100644 100644 9dc3bd0... d9c8123... M	python/_dbus.py
:100644 100644 66b8c56... b9df815... M	python/exceptions.py
:100644 100644 0e00d64... d8804c0... M	python/proxies.py

commit 99e291c0cf9af2f4438def9212ce2f29c057ae7f
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Sun May 1 19:34:58 2005 +0000

    * python/dbus_bindings.pyx.in:
    
    - added new type classes for hinting to the marashaler what type
    to send over the wire
    - added int16 and uint16 marshalers
    - Fixed a bug in the type constants that caused int32 to go out
    as uint16 over the wire
    * python/dbus.py: split up into different files and renamed _dbus.py
    * python/__init__.py, python/_util.py, python/decorators.py,
    python/exceptions.py, python/proxies.py, python/services.py,
    python/types.py: new files split off from dbus.py
    * python/Makefile.am: Add new files, remove dbus.py and
    install all python files to <python module dir>/dbus
    * python/examples/*: Added #!/usr/bin/env python to the top of
    every example.  Patch provided by Tatavarty Kalyan

:100644 100644 2519163... f7a5631... M	python/Makefile.am
:000000 100644 0000000... 0fd1d80... A	python/__init__.py
:000000 100644 0000000... 9dc3bd0... A	python/_dbus.py
:000000 100644 0000000... 3f7061c... A	python/_util.py
:100644 000000 6b1ea55... 0000000... D	python/dbus.py
:100644 100644 0bfb994... 8d41b1e... M	python/dbus_bindings.pyx.in
:000000 100644 0000000... 4be6e20... A	python/decorators.py
:100644 100644 2209ff9... 9963454... M	python/examples/example-service.py
:100644 100644 8797e5f... 662c2bc... M	python/examples/example-signal-emitter.py
:100644 100644 2da65ec... 1dbf6a6... M	python/examples/example-signal-recipient.py
:100644 100644 f9c6309... f763e3f... M	python/examples/gconf-proxy-client.py
:100644 100644 25ecbe9... 18c8047... M	python/examples/gconf-proxy-service.py
:100644 100644 5ba77db... 3667a85... M	python/examples/gconf-proxy-service2.py
:100644 100644 80f63f9... d428055... M	python/examples/list-system-services.py
:000000 100644 0000000... 66b8c56... A	python/exceptions.py
:000000 100644 0000000... 0e00d64... A	python/proxies.py
:000000 100644 0000000... 7e0b58b... A	python/services.py
:000000 100644 0000000... 1a01d8e... A	python/types.py

commit b27b13812644b7da6a40c212437d1d6898aa9439
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Mon Apr 25 22:54:28 2005 +0000

    * python/dbus_bindings.pyx.in (send_with_reply_handlers): New send
    
    method for doing async calls
    (_pending_call_notification): New C function for handling pendning call
    callbacks
    (set_notify): New method for setting pending call notification
    
    * python/dbus.py: new version tuple "version" is set at (0, 40, 0)
    Async capabilities added to remote method calls
    (Sender): class removed
    (RemoteService): class removed
    (ObjectTree): class removed for now
    (RemoteObject): Renamed to ProxyObject
    (RemoteMethod): Renamed to ProxyMethod
    (method): Decorator added for decorating python methods as dbus methods
    (signal): Decorator added for decorating python methods as signal emitters
    (ObjectType): Metaclass added for generating introspection data and the
    method callback vtable
    (Interface): Wrapper class added to wrap objects in a dbus interface
    (Object): Uses ObjectType as its metaclass and exports Introspect
    of the org.freedesktop.DBus.Introspectable interface
    (ValidationException, UnknownMethodException): new exceptions
    
    * python/examples/*: Modified to fit with the new bindings

:100644 100644 72c0979... 6b1ea55... M	python/dbus.py
:100644 100644 6681c45... 0bfb994... M	python/dbus_bindings.pyx.in
:100644 100644 0270ed6... 7439e6b... M	python/examples/example-client.py
:100644 100644 e9f407f... 2209ff9... M	python/examples/example-service.py
:100644 100644 bcd5ad6... 8797e5f... M	python/examples/example-signal-emitter.py
:100644 100644 b530607... 2da65ec... M	python/examples/example-signal-recipient.py
:100644 100644 9b114da... 80f63f9... M	python/examples/list-system-services.py

commit b190b899f2f645d4b71d01eb9f53ce0e198ce576
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Mar 29 17:01:43 2005 +0000

    * python/lvalue_cast_post_process.py - removed. Patch has been submitted to Pyrex maintainers that fixes gcc4.0 error
    
    * python/Makefile.am: removed refrences to lvalue_cast_post_process.py

:100644 100644 3fd678b... 2519163... M	python/Makefile.am
:100755 000000 6612900... 0000000... D	python/lvalue_cast_post_process.py

commit a4597b45df11db105206b87054042f9612684b2e
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Mon Mar 21 21:13:56 2005 +0000

    * python/lvalue_cast_post_process.py - added post processor to fix Pyrex code so that it compiles with gcc4.0
    
    * python/Makefile.am: Added lvalue_cast_post_process.py to EXTRA_DIST
      run dbus_bindings.c through lvalue_cast_post_process.py and copy the
      results back to dbus_binding.c

:100644 100644 2519163... 3fd678b... M	python/Makefile.am
:000000 100755 0000000... 6612900... A	python/lvalue_cast_post_process.py

commit bb519aab3c2b9112eba2e67a50e2864dc65f765c
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Wed Feb 23 19:36:24 2005 +0000

    python/dbus_bindings.pyx.in (PendingCall::get_reply):
    
    s/dbus_pending_call_get_reply/dbus_pending_call_steal_reply

:100644 100644 a1c4e69... 6681c45... M	python/dbus_bindings.pyx.in

commit 4940b112efc417868f567d885e36297e14e43244
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Feb 11 19:51:18 2005 +0000

    * python/dbus.py (class Sender): added to support dbus signals better
    
    to True.  When expand args is True the signal handler will pass the
    message arguments as parameters to the signal handler.  If False
    revert to previous behavior where the signal handler must get the
    argument list from the message.  This is to help port applications
    like HAL that have a tendancy to send variable length argument lists.
    self._match_rule_to_receivers is now a dict of dicts.
    (Bus::remove_signal_receiver): pop handler off the dict intead of
    removing it from a list
    (Bus::_signal_func): change signal handlers so that interface,
    signal_name, service, path and message are packed into a Sender
    object and that is passed to the handler.  If expand_args is True
    extract the args list from the message and append it to the parameter
    list
    
    * python/dbus_bindings.pyx.in (class Signature): added to support
    signiature types
    (MessageIter::__init__): changed iteration limit to match D-BUS
    (MessageIter::get*): added INT16, UINT16, SIGNATURE, DICT_ENTRY,
    STRUCT and VARIENT type support
    (MessageIter::python_value_to_dbus_sig): made recursive to support
    recursive types
    (MessageIter::append*): added Signature, dict, tuple
    support
    
    * python/examples/example-client.py: added examples of getting tuples
    and dicts
    
    * python/examples/example-service.py: added examples of sending tuples
    and dicts
    
    * python/examples/example-signal-recipient.py: Fixed to handle new
    signal callback format

:100644 100644 e80b0ce... 72c0979... M	python/dbus.py
:100644 100644 2da70b3... a1c4e69... M	python/dbus_bindings.pyx.in
:100644 100644 b3b22f5... 0270ed6... M	python/examples/example-client.py
:100644 100644 1ea7fd8... e9f407f... M	python/examples/example-service.py
:100644 100644 65e5933... b530607... M	python/examples/example-signal-recipient.py

commit ca4b771f58b30005ec4bb47acacfa73d1c467ac9
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Fri Jan 28 19:09:54 2005 +0000

    * python/dbus_bindings.pyx.in: Updated to handle new D-BUS type system - BUS_ACTIVATION -> BUS_STARTER - DBUS_BUS_ACTIVATION -> DBUS_BUS_STARTER - class MessageIter (__init__): Added recursion checking so we throw a nice error instead of just disconnecting from the bus. (get): Added arg_type parameter for recursion. Removed the nil type Added signiture type placeholder (not implemented) Added struct type placeholder (not implemented) Added varient type placeholder (not implemented) Commented out dict type for now (get_element_type): renamed from get_array_type (get_*): changed to use the dbus_message_iter_get_basic API (get_*_array): removed in favor of recursive get_array method (get_array): new recursive method which calls get to marshal the elements of the array (value_to_dbus_sig): New method returns the corrasponding dbus signiture to a python value (append): Comment out dict handling for now Handle lists with the new recursive API Comment out None handling for no
    
    w
    	(append_nil): removed
    	(append_*): changed to use dbus_message_iter_append_basic API
    	(append_*_array): removed in favor of recursive append_array
    	method
    	(__str__): Make it easier to print out recursive iterators
    	for debugging
    	- class Message (__str__): moved type inspection to the
    	MessageIter class' __str__ method
    	(get_iter): Added an append parameter wich defaults to False
    	If True use the new API's to create an append iterator
    
    * python/dbus.py: Update to use new bindings API
    	- TYPE_ACTIVATION -> TYPE_STARTER
    	- class Bus (_get_match_rule): GetServiceOwner -> GetNameOwner
    	- class ActivationBus -> class StarterBus
    	- class RemoteObject (__call__): get an append iterator
    	- (_dispatch_dbus_method_call): get an append iterator
    	- class Object (emit_signal): get an append iterator
    
    * python/examples/: Fixed up the examples to work with the new API

:100644 100644 72919d9... e80b0ce... M	python/dbus.py
:100644 100644 b42ba7f... 2da70b3... M	python/dbus_bindings.pyx.in
:100644 100644 4f753cd... 1ea7fd8... M	python/examples/example-service.py
:100644 100644 edabfd7... bcd5ad6... M	python/examples/example-signal-emitter.py
:100644 100644 9769fc5... 9b114da... M	python/examples/list-system-services.py

commit f6f84489cf9e6fa2f343eb5ce4f78b9b2ee4dc90
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Jan 25 19:06:53 2005 +0000

    * python/dbus_bindings.pyx.in: Rename of methods and bindings - get_base_service->get_unique_name - bus_get_base_service->bus_get_unique_name - dbus_bus_get_base_service -> dbus_bus_get_unique_name - ACTIVATION_REPLY_ACTIVATED -> DBUS_START_REPLY_SUCCESS - ACTIVATION_REPLY_ALREADY_ACTIVE -> DBUS_START_REPLY_ALREADY_RUNNING - bus_activate_service -> bus_start_service_by_name - dbus_bus_activate_service -> dbus_bus_start_service_by_name - bus_acquire_service -> bus_request_name - dbus_bus_acquire_service -> dbus_bus_request_name - bus_service_exists -> bus_name_has_owner - dbus_bus_service_exists -> dbus_bus_name_has_owner
    
    * python/dbus.py: Rename of methods
    	- activate_service -> start_service_by_name
    	- bus_acquire_service -> bus_request_name
    	- ACTIVATION_REPLY_ACTIVATED -> START_REPLY_SUCCESS
    	- ACTIVATION_REPLY_ALREADY_ACTIVE -> START_REPLY_ALREADY_RUNNING

:100644 100644 2857e15... 72919d9... M	python/dbus.py
:100644 100644 d6ec96f... b42ba7f... M	python/dbus_bindings.pyx.in

commit dc9a91e745f5885fc9b63568a9f4228a7522c381
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Dec 30 18:28:03 2004 +0000

    2004-12-30 John (J5) Palmieri <johnp@redhat.com>
    
    	* python/dbus.py: s/ACTIVATION_REPLY_ACTIVE/ACTIVATION_REPLY_ACTIVATED

:100644 100644 6d38667... 2857e15... M	python/dbus.py

commit 32e2f57ac99f528d159b68b8dfafc74c39a3c4cc
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Dec 30 14:19:53 2004 +0000

    2004-12-30 John (J5) Palmieri <johnp@redhat.com>
    
            * python/dbus_bindings.pyx.in: Change DBUS_ACTIVATION_REPLY_ACTIVATED
            and DBUS_ACTIVATION_REPLY_ALREADY_ACTIVE to match the values in
            dbus-protocol.h.  Because they are defines and not enums they are not
            autogenerated.

:100644 100644 db391e1... d6ec96f... M	python/dbus_bindings.pyx.in

commit 01740aa1f3c4c2cecdf37a3c043a42d0dbffc773
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Mon Dec 27 16:01:13 2004 +0000

    2004-12-26 John (J5) Palmieri <johnp@redhat.com>
    
    	* python/dbus_bindings.pyx.in (bus_activate_service): Bind
    	dbus_bus_activate_service
    
    	* python/dbus.py (Bus.activate_service): activate a service on the
    	bus.

:100644 100644 c8ac561... 6d38667... M	python/dbus.py
:100644 100644 59c3858... db391e1... M	python/dbus_bindings.pyx.in

commit f33050956dca770af4d188768bcd8537a1686d45
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Thu Dec 23 00:50:37 2004 +0000

    * patch from Rob Taylor <robtaylor@fastmail.fm> - wrap bus_get_unix_user method in low level bindings - add get_unix_user method to the Bus class - fix extract.py so it can handle unsigned long return types

:100644 100644 4b53897... c8ac561... M	python/dbus.py
:100644 100644 64b43a6... 59c3858... M	python/dbus_bindings.pyx.in
:100644 100644 460af5a... f836edc... M	python/extract.py

commit 1a6d664b037ea2fcbcbfdc8d637a7f5309e68ffb
Author: David Zeuthen <david@fubar.dk>
Date:   Thu Sep 16 19:56:26 2004 +0000

    2004-09-16 David Zeuthen <david@fubar.dk>
    
    	* python/dbus_bindings.pyx.in: Add support for int64 and uint64

:100644 100644 6e73c85... 64b43a6... M	python/dbus_bindings.pyx.in

commit 6e5b6a98a792653e9248767be746a031e851cb84
Author: Anders Carlsson <andersca@gnome.org>
Date:   Wed Jul 28 18:14:55 2004 +0000

    2004-07-28 Anders Carlsson <andersca@gnome.org>
    
    	* python/dbus.py:
    	* python/dbus_bindings.pyx.in:
    	Add dbus.init_gthreads (), allow emit_signal to pass
    	arguments to the signal.

:100644 100644 de42d74... 4b53897... M	python/dbus.py
:100644 100644 498076d... 6e73c85... M	python/dbus_bindings.pyx.in

commit bac1c708b7ae971bf96500161f56edec4120ad3b
Author: Seth Nickell <seth@gnome.org>
Date:   Sun Jul 18 21:44:37 2004 +0000

    2004-07-18 Seth Nickell <seth@gnome.org>
    
    	* python/dbus.py:
    	* python/dbus_bindings.pyx.in:
    	* python/tests/test-client.py:
    
    	Add dbus.ByteArray and dbus_bindings.ByteArray
    	types so that byte streams can be passed back.
    
    	Give jdahlin the heaps of credit that are so
    	rightfully his.

:100644 100644 55c6123... de42d74... M	python/dbus.py
:100644 100644 6703f7d... 498076d... M	python/dbus_bindings.pyx.in
:100644 100644 6a73cbd... 5dc6e20... M	python/tests/test-client.py

commit fb762d8e21ae66ceda54496168d92d7e8dc4bce2
Author: Seth Nickell <seth@gnome.org>
Date:   Mon Jul 12 06:28:59 2004 +0000

    2004-07-12 Seth Nickell <seth@gnome.org>
    
    	* python/dbus.py:
    
    	Add message argument to the default object_method_handler
    	function.
    
    	* python/dbus_bindings.pyx.in:
    
    	Automatically return NIL when passed an empty list
    	(we can't pass back a list since lists are typed
    	and we don't have any idea what type the the client
    	intended the list to be... :-( )

:100644 100644 e53bf23... 55c6123... M	python/dbus.py
:100644 100644 de90603... 6703f7d... M	python/dbus_bindings.pyx.in

commit 1e926c3330e91895034c91c59c368d7201a8bc56
Author: Seth Nickell <seth@gnome.org>
Date:   Sun Jul 11 03:09:03 2004 +0000

    2004-07-10 Seth Nickell <seth@gnome.org>
    
    	* python/examples/Makefile.am:
    
    	Fix distcheck breakage caused by new examples.

:100644 100644 69d2c67... f7a1b22... M	python/examples/Makefile.am

commit e386459734ff05d09c43d50b8623659512d36975
Author: Seth Nickell <seth@gnome.org>
Date:   Sun Jul 11 03:02:14 2004 +0000

    2004-07-10 Seth Nickell <seth@gnome.org>
    
    	* python/dbus.py:
    
    	Add "message" argument to service-side dbus.Object
    	methods. This will break existing services written
    	using the python bindings, but will allow extraction
    	of all the message information (e.g. who its from).
    
    	Add improved "object oriented" signal handling/emission.
    
    	* python/examples/example-service.py:
    
    	Nix this example.
    
    	* python/examples/example-signal-emitter.py:
    	* python/examples/example-signal-recipient.py:
    
    	Two new examples that show how to emit and receive
    	signals using the new APIs.
    
    	* python/examples/example-signals.py:
    	* python/examples/gconf-proxy-service.py:
    	* python/examples/gconf-proxy-service2.py:
    
    	Add "message" argument to service methods.

:100644 100644 13ea1ad... e53bf23... M	python/dbus.py
:100644 100644 974f8b1... 4f753cd... M	python/examples/example-service.py
:000000 100644 0000000... edabfd7... A	python/examples/example-signal-emitter.py
:000000 100644 0000000... 65e5933... A	python/examples/example-signal-recipient.py
:100644 000000 8e31956... 0000000... D	python/examples/example-signals.py
:100644 100644 76e43ce... 25ecbe9... M	python/examples/gconf-proxy-service.py
:100644 100644 4cec860... 5ba77db... M	python/examples/gconf-proxy-service2.py

commit 740b3a75006d1f5cc228c65838105a7a8b3ae75c
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Wed Jun 23 14:59:43 2004 +0000

    * switched include directory from glib/ to dbus/ since dbus-glib.h moved

:100644 100644 a1e22b8... 2519163... M	python/Makefile.am

commit 3ba6699d5e975a50693807268923bda69a15773a
Author: Owen Fraser-Green <owen@discobabe.net>
Date:   Thu Jun 10 12:13:39 2004 +0000

    Fixed typo for python/examples make

:100644 100644 4a9b8ab... 69d2c67... M	python/examples/Makefile.am

commit 5e41974dd9ea8db84985ff5b31d3ea525fbf0947
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Tue Jun 8 02:35:43 2004 +0000

    * Python bindings are updated to reflect C API changes which now accept plain path strings instead of an array of path elements.

:100644 100644 b309015... de90603... M	python/dbus_bindings.pyx.in

commit e29bd0928368c6303209b6a2a4ea1ed749f6e58f
Author: Seth Nickell <seth@gnome.org>
Date:   Tue Jun 1 06:16:13 2004 +0000

    Update .cvsignore files

:100644 100644 9a63921... 4a73b5b... M	python/.cvsignore
:000000 100644 0000000... 282522d... A	python/examples/.cvsignore

commit 22ac6379fbc251ac40e1635353e2b83676f6ea66
Author: Seth Nickell <seth@gnome.org>
Date:   Tue Jun 1 06:13:31 2004 +0000

    2004-06-01 Seth Nickell <seth@gnome.org>
    
    	* python/dbus_bindings.pyx.in:
    	* python/tests/test-client.py:
    
    	Round off basic type support. Add dicts (yay!), and
    	remaining array types.
    
    	Make MessageIter more general so it works for dicts too.
    
    	Mark all loop variables as C integers.

:100644 100644 0df7836... b309015... M	python/dbus_bindings.pyx.in
:100644 100644 f08f986... 6a73cbd... M	python/tests/test-client.py

commit dd476a9662e4f66f08610a793458b4740823a525
Author: Seth Nickell <seth@gnome.org>
Date:   Tue Jun 1 01:20:59 2004 +0000

     * python/dbus_bindings.pyx.in: * python/tests/test-client.py:
    
    	Test Suite: 1
    	Python Bindings: 0
    
    	(fix string array memory trashing bug... oops)

:100644 100644 dba5bc7... 0df7836... M	python/dbus_bindings.pyx.in
:100644 100644 092ee43... f08f986... M	python/tests/test-client.py

commit 897be0d7a55449df0fb97b1126afecbb6906c083
Author: Seth Nickell <seth@gnome.org>
Date:   Sun May 30 08:20:58 2004 +0000

    2004-05-30 Seth Nickell <seth@gnome.org>
    
    	* python/dbus.py:
    
    	Add a nicer-but-less-flexible alternate API for handling
    	calls to virtual objects in dbus.ObjectTree.
    
    	Screw up the argument order to the dbus.Object constructor
    	for consistency with dbus.ObjectTree (and to make dbus_methods
    	optional for future extension)
    
    	* python/examples/Makefile.am:
    	* python/examples/gconf-proxy-service.py:
    	* python/examples/gconf-proxy-service2.py:
    
    	Alternate implementation of gconf-proxy-service using the
    	nicer dbus.ObjectTree API.
    
    	* python/examples/example-service.py:
    	* python/tests/test-server.py
    
    	Reverse the argument order to deal with dbus.Object constructor
    	changes.

:100644 100644 797b196... 13ea1ad... M	python/dbus.py
:100644 100644 8eab412... 4a9b8ab... M	python/examples/Makefile.am
:100644 100644 ceb7f11... 974f8b1... M	python/examples/example-service.py
:100644 100644 b5842e8... 76e43ce... M	python/examples/gconf-proxy-service.py
:000000 100644 0000000... 4cec860... A	python/examples/gconf-proxy-service2.py
:100644 100644 2af685b... 235da70... M	python/tests/test-server.py

commit 51c8a42abcc0a2ab8e079d218003d9ccc48f1d79
Author: Seth Nickell <seth@gnome.org>
Date:   Sun May 30 06:26:24 2004 +0000

    2004-05-30 Seth Nickell <seth@gnome.org>
    
    	* python/examples/example-client.py:
    	* python/examples/example-service.py:
    
    	Take it back. Lists seem to work but they're broken
    	in the test suite. Make the base examples use
    	lists (works fine).

:100644 100644 c1393ec... b3b22f5... M	python/examples/example-client.py
:100644 100644 d146080... ceb7f11... M	python/examples/example-service.py

commit 4f3d0dac99f3f93fc04b403f8c7e6b2177725851
Author: Seth Nickell <seth@gnome.org>
Date:   Sun May 30 06:21:00 2004 +0000

    2004-05-30 Seth Nickell <seth@gnome.org>
    
    	* python/dbus_bindings.pyx.in:
    	* python/tests/test-client.py:
    
    	Add some more tests and fix errors that crop up.
    	Unfortunately, currently it seems like marshalling
    	and unmarshalling of lists is completely broken :-(

:100644 100644 c8d0b6c... dba5bc7... M	python/dbus_bindings.pyx.in
:100644 100644 d12ee2a... 092ee43... M	python/tests/test-client.py

commit 92e6c358afffd4fcdd5efd0075f9faa857c60ab3
Author: Seth Nickell <seth@gnome.org>
Date:   Sun May 30 05:30:09 2004 +0000

    2004-05-30 Seth Nickell <seth@gnome.org>
    
    	* python/dbus_bindings.pyx.in:
    
    	Add support for ObjectPath type.
    
    	* python/dbus.py:
    
    	Refactor message handling code to a common function.
    
    	* python/tests/test-client.py:
    	* python/tests/test-server.py:
    
    	Add tests that check to make sure values of all types
    	can be echoed from a service w/o mangling.

:100644 100644 2c405c7... 797b196... M	python/dbus.py
:100644 100644 16df6fe... c8d0b6c... M	python/dbus_bindings.pyx.in
:000000 100644 0000000... d12ee2a... A	python/tests/test-client.py
:000000 100644 0000000... 2af685b... A	python/tests/test-server.py

commit 4a5617e6090ca2402a74a0bf3cac2b891cbc0824
Author: Seth Nickell <seth@gnome.org>
Date:   Sun May 30 02:26:48 2004 +0000

    2004-05-29 Seth Nickell <seth@gnome.org>
    
    	* python/dbus.py:
    
    	Add ObjectTree class which allows implementation
    	of trees of "virtual" objects. Basically the python
    	wrapper for "register_fallback".
    
    	* python/examples/Makefile.am
    	* python/examples/gconf-proxy-client.py:
    	* python/examples/gconf-proxy-service.py:
    
    	Implement a simple GConf proxy service that supports
    	get/set on string and int GConf keys using the ObjectTree.

:100644 100644 583c554... 2c405c7... M	python/dbus.py
:100644 100644 743c520... 8eab412... M	python/examples/Makefile.am
:000000 100644 0000000... f9c6309... A	python/examples/gconf-proxy-client.py
:000000 100644 0000000... b5842e8... A	python/examples/gconf-proxy-service.py

commit 188e82d59c07729efbefe22d0919150054d8b374
Author: Seth Nickell <seth@gnome.org>
Date:   Sat May 29 22:37:13 2004 +0000

    2004-05-29 Seth Nickell <seth@gnome.org>
    
    	* python/dbus.py:
    	* python/examples/example-client.py:
    	* python/examples/example-service.py:
    	* python/examples/list-system-services.py:
    
    	Add SessionBus, SystemBus and ActivationBus classes
    	so you don't need to know the special little BUS_TYPE
    	flag.

:100644 100644 883d9e6... 583c554... M	python/dbus.py
:100644 100644 0038b2d... c1393ec... M	python/examples/example-client.py
:100644 100644 79fb009... d146080... M	python/examples/example-service.py
:100644 100644 20b79d5... 9769fc5... M	python/examples/list-system-services.py

commit 33e96395a41362c57790e3cc9313851ebdd04d96
Author: Seth Nickell <seth@gnome.org>
Date:   Fri May 28 18:43:55 2004 +0000

     * python/examples/Makefile.am:
    
    	Forget to add Makefile.am. Do not pass go.

:000000 100644 0000000... 743c520... A	python/examples/Makefile.am

commit ab5a89c0348c8bd271015bfdb2a32f7d4cdf586c
Author: Seth Nickell <seth@gnome.org>
Date:   Fri May 28 02:52:23 2004 +0000

     * configure.in: * python/Makefile.am:
    
    	Include the example python apps in the tarball.
    
    	* python/examples/list-system-services.py
    
    	Add a python new example that fetches the list of services
    	from the system bus.

:100644 100644 d57e08f... a1e22b8... M	python/Makefile.am
:000000 100644 0000000... 20b79d5... A	python/examples/list-system-services.py

commit eff8859282d14b81b24f6092a6e155b5a0df8183
Author: Seth Nickell <seth@gnome.org>
Date:   Fri May 28 02:16:11 2004 +0000

    2004-05-27 Seth Nickell <seth@gnome.org>
    
    	* python/dbus.py:
    	* python/dbus_bindings.pyx.in:
    
    	Fix failure to notify that a signal was not handled,
    	resulted in hung functions.

:100644 100644 3a997da... 883d9e6... M	python/dbus.py
:100644 100644 26711ea... 16df6fe... M	python/dbus_bindings.pyx.in

commit 42f81c81ba6e69ef0ae0b4c30f9708a7afb6c1e3
Author: John (J5) Palmieri <johnp@redhat.com>
Date:   Mon May 10 18:16:29 2004 +0000

    * Fixed python bindings by defining all need parameter and variable types

:100644 100644 dfcc1e7... 26711ea... M	python/dbus_bindings.pyx.in

commit 7b93322959ed78fc28deda8c84835dfe2531a59d
Author: Michael Meeks <michael@ximian.com>
Date:   Mon Mar 29 12:50:45 2004 +0000

    hush.

:000000 100644 0000000... 9a63921... A	python/.cvsignore

commit 4f3a79f0e6ba96167dd92c730f122be5c7999889
Author: Havoc Pennington <hp@redhat.com>
Date:   Fri Mar 19 22:36:30 2004 +0000

    2004-03-19 Havoc Pennington <hp@redhat.com>
    
    	* NEWS: 0.21 updates
    
    	* configure.in: 0.21
    
    	* doc/Makefile.am: add all XMLTO usage to DBUS_XML_DOCS_ENABLED
    
    	* python/Makefile.am: change to avoid dist of dbus_bindings.c so
    	you don't need pyrex to make dist
    
    	* qt/Makefile.am (libdbus_qt_1_la_SOURCES): add integrator.h to
    	sources; run moc

:100644 100644 5ef1b73... d57e08f... M	python/Makefile.am

commit e150be4e0a9e55b16eac520bdb5bd0c96621ea5a
Author: David Zeuthen <david@fubar.dk>
Date:   Mon Dec 1 20:49:53 2003 +0000

    2003-12-01 David Zeuthen <david@fubar.dk>
    
    	* python/dbus.py: Add the actual message when calling the reciever
    	of a signal such that parameters can be inspected. Add the method
    	remove_signal_receiver

:100644 100644 c7ab5dd... 3a997da... M	python/dbus.py

commit 5dd7e406571391570edc02ed1e0998cdad9f8493
Author: David Zeuthen <david@fubar.dk>
Date:   Wed Oct 29 00:06:07 2003 +0000

    2003-10-28 David Zeuthen <david@fubar.dk>
    
            * python/dbus_bindings.pyx.in: add get_dict to handle dictionaries
            return types. Fixup TYPE_* to reflect changes in dbus/dbus-protocol.h

:100644 100644 7127ece... dfcc1e7... M	python/dbus_bindings.pyx.in

commit 8a404b1ab5ed430112d35a23e6155c06a72f236f
Author: David Zeuthen <david@fubar.dk>
Date:   Wed Oct 15 21:25:13 2003 +0000

    2003-10-14 David Zeuthen <david@fubar.dk>
    
            * python/dbus_bindings.pyx.in (MessageIter.get): fixed typo in
            argtype to arg_type when raising unknown arg type exception.
            Changed type list to reflect the changes in dbus-protocol.h so
            the bindings actually work.

:100644 100644 4ae056c... 7127ece... M	python/dbus_bindings.pyx.in

commit c4a01481d5ec9530af0f1e08130420f099ffc96c
Author: Seth Nickell <seth@gnome.org>
Date:   Wed Oct 15 11:56:12 2003 +0000

    Fix makefile.am

:100644 100644 b2d3b6c... 5ef1b73... M	python/Makefile.am

commit 2a5101364f1b42e52dff3967e999419cfe266f8f
Author: Seth Nickell <seth@gnome.org>
Date:   Mon Oct 13 23:07:34 2003 +0000

    2003-10-13 Seth Nickell <seth@gnome.org>
    
    	* python/Makefile.am:
    
    	Pass "make distcheck": remove a couple files from DIST_FILES
    	that weren't included in the final version.

:100644 100644 792dc47... b2d3b6c... M	python/Makefile.am

commit 362dd3f1415326f9dd545e0ac6dc11ffc9507409
Author: Havoc Pennington <hp@redhat.com>
Date:   Tue Sep 30 02:41:13 2003 +0000

    add examples

:000000 100644 0000000... 0038b2d... A	python/examples/example-client.py
:000000 100644 0000000... 79fb009... A	python/examples/example-service.py
:000000 100644 0000000... 8e31956... A	python/examples/example-signals.py

commit 8253b8df29181efd8d6ddd84098384d27a403698
Author: Havoc Pennington <hp@redhat.com>
Date:   Tue Sep 30 02:40:49 2003 +0000

    forgot to add files...

:000000 100644 0000000... 792dc47... A	python/Makefile.am
:000000 100644 0000000... c7ab5dd... A	python/dbus.py
:000000 100644 0000000... 4ae056c... A	python/dbus_bindings.pyx.in
:000000 100644 0000000... 2e218c8... A	python/dbus_h_wrapper.h
:000000 100644 0000000... 460af5a... A	python/extract.py
